% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SeedMatchR.R
\name{.get_match_df}
\alias{.get_match_df}
\title{Get sequence matches as a \code{data.frame}}
\usage{
.get_match_df(
  target.seq,
  seqs,
  seed.name,
  sirna.name = NULL,
  max.mismatch = 0,
  with.indels = TRUE,
  fixed = TRUE
)
}
\arguments{
\item{target.seq}{Pattern to search for in \code{seqs}}

\item{seqs}{The \code{DNAStringSet} to be search for instances of the \code{target.seq}}

\item{seed.name}{The seed name to be reported in the \code{data.frame} column called \code{seed}}

\item{sirna.name}{Optional siRNA name. A new column called \code{sirna.name} will be added to \code{data.frame}}

\item{max.mismatch}{Number of allowed mismatches or the total edit distance}

\item{with.indels}{If True, include indels}

\item{fixed}{Require that each sequence symbol matches when searching. Should be FALSE if using wobbles.}
}
\value{
A \code{data.frame} of matches and ranges for each sequence in \code{seqs}
}
\description{
This function will perform the siRNA sequence match to the transcript library
and return it as a \code{data.frame} of ranges. This function uses
\code{vmatchPattern} to perform the matching. The \code{data.frame} will have
the columns: "names", "start", "end", "width", "seed".  If the optional
\code{sirna.name} argument is provided then an additional column will be added.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

guide.seq = "UUAUAGAGCAAGAACACUGUUUU"

seed.seq = get_seed(guide.seq = guide.seq, seed.name = "mer7m8")

anno.db = load_annotations("rnor7")

SeedMatchR:::.get_match_df(target.seq = seed.seq$Target.Seq,
seqs = anno.db$seqs, seed.name = "mer7m8")
\dontshow{\}) # examplesIf}
}
