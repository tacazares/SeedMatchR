[{"path":"https://tacazares.github.io/SeedMatchR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 SeedMatchR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"can install development version SeedMatchR GitHub stable build CRAN.","code":"# Install from GitHub install.packages(\"devtools\") devtools::install_github(\"tacazares/SeedMatchR\")"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"introduction-to-example-dataset","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Introduction to example dataset","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication: guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno A, LeBlanc S, Liebow A, Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. From bench to bedside: Improving the clinical safety of GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600. # siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"required-input-data","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Required Input Data","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"required inputs SeedMatchR DESeq2 results data frame addition species specific annoation data GTF, 2bit DNA, 3’ UTR sequences. SeedMatchR makes extensive use AnnotationDB objects help access genomic information reproducible manner. required annotations : character string representing siRNA RNA sequence. must greater 8 bp. res: data frame DESEQ2 results. GTF: gene transfer file containing species specific genomic information gene bodies. used derive list 3’ UTRs features used analysis. also used map transcript IDs gene IDs. Feature-specific DNAStringSet: DNAStringSet object sequences features interest. features must named according transcript derived . Examples include generated GenomicFeatures::extractTranscriptSeqs() paired functions like GenomicFeatures::threeUTRsByTranscript().","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"prepare-species-specific-annotation-data","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Required Input Data","what":"Prepare species-specific annotation data","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"function load_species_anno_db() built annotation data human, rat, mouse annotations. can load species specific annotations using following approach:","code":"# Load the species specific annotation database object anno.db <- load_species_anno_db(\"rat\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"extract-features-and-sequences-of-interest-from-annotations","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Required Input Data","what":"Extract features and sequences of interest from annotations","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"use annotations derive features feature sequences want scan gene.","code":"features = get_feature_seqs(anno.db$tx.db, anno.db$dna, feature.type = \"3UTR\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"prepare-deseq2-results","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Required Input Data","what":"Prepare DESEQ2 Results","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"SeedMatchR assumes performing analysis DESEQ2 results outputs. first step load DESEQ2 results file data frame. test data provided SeedMatchR derived 2022 publication Schlegel et al. data set represents DESeq2 analysis performed rat liver treated Ttr targeting siRNA. use example explore seed mediated activity. data set name long, renamed res.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"download-data-only-need-to-perform-once","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Required Input Data","what":"Download data (only need to perform once)","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"start downloading example data set. function download three files GEO accession GSE184929. files represent three samples different siRNA treatments two dosages.","code":"get_example_data(\"sirna\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"load-example-data","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Required Input Data","what":"Load example data","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"can load example data environment. DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res. DESeq2 results file filtered. function filter_deseq() can used filter results file log2FoldChange, padj, baseMean, remove NA entries.","code":"sirna.data = load_example_data(\"sirna\") res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg # Dimensions before filtering  dim(res) # [1] 32883    6 #> [1] 32883     8  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  # Dimensions after filtering dim(res) # [1] 13582     8 #> [1] 13582     8"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"plot-possible-seeds","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Plot possible seeds","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"Use plot_seeds() function visualize available SeedMatchR options input sequence interest. input plot_seeds() input siRNA sequence interest. function assumes using RNA input.","code":"# Plot the seed sequence options for the siRNA of interest avail.seed.plot = plot_seeds(guide.seq) #> use default substitution matrix #> Registered S3 methods overwritten by 'ggalt': #>   method                  from    #>   grid.draw.absoluteGrob  ggplot2 #>   grobHeight.absoluteGrob ggplot2 #>   grobWidth.absoluteGrob  ggplot2 #>   grobX.absoluteGrob      ggplot2 #>   grobY.absoluteGrob      ggplot2 #> Registered S3 methods overwritten by 'treeio': #>   method              from     #>   MRCA.phylo          tidytree #>   MRCA.treedata       tidytree #>   Nnode.treedata      tidytree #>   Ntip.treedata       tidytree #>   ancestor.phylo      tidytree #>   ancestor.treedata   tidytree #>   child.phylo         tidytree #>   child.treedata      tidytree #>   full_join.phylo     tidytree #>   full_join.treedata  tidytree #>   groupClade.phylo    tidytree #>   groupClade.treedata tidytree #>   groupOTU.phylo      tidytree #>   groupOTU.treedata   tidytree #>   inner_join.phylo    tidytree #>   inner_join.treedata tidytree #>   is.rooted.treedata  tidytree #>   nodeid.phylo        tidytree #>   nodeid.treedata     tidytree #>   nodelab.phylo       tidytree #>   nodelab.treedata    tidytree #>   offspring.phylo     tidytree #>   offspring.treedata  tidytree #>   parent.phylo        tidytree #>   parent.treedata     tidytree #>   root.treedata       tidytree #>   rootnode.phylo      tidytree #>   sibling.phylo       tidytree #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale.  avail.seed.plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"get-the-seed-sequence-of-interest","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Get the seed sequence of interest","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"can extract seed sequence information siRNA input sequence using get_seed() function. inputs get_seed() function siRNA sequence interest name seed.","code":"# Get the seed sequence information for the seed of interest seed = get_seed(guide.seq, \"mer7m8\")  seed #> $Guide #> 23-letter RNAString object #> seq: UUAUAGAGCAAGAACACUGUUUU #>  #> $Seed.Name #> [1] \"mer7m8\" #>  #> $Seed.Seq.RNA #> 7-letter RNAString object #> seq: UAUAGAG #>  #> $Seed.Seq.DNA #> 7-letter DNAString object #> seq: TATAGAG #>  #> $Target.Seq #> 7-letter DNAString object #> seq: CTCTATA"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"counting-seed-matches-in-transcripts","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Counting seed matches in transcripts","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"can perform seed match single seed using SeedMatchR() function.","code":"res = SeedMatchR(res,                   anno.db$gtf,                   features$seqs,                   guide.seq)  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 #> 1 3.405371e-119    Ttr      1 #> 2  1.358683e-32  Kpna6      0 #> 3  8.630849e-31  Aplp2      1 #> 4  5.144824e-26  Mmp12      0 #> 5  1.122577e-23  Stac3      0 #> 6  1.954121e-22  Gpnmb      0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"match-multiple-seeds","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Counting seed matches in transcripts","what":"Match multiple seeds","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"can perform seed matching available seeds using loop. results appended new column results data frame.","code":"for (seed in c(\"mer8\", \"mer6\", \"mer7A1\")){ res <- SeedMatchR(res,                    anno.db$gtf,                    features$seqs,                    guide.seq,                    seed.name = seed) }  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 mer8 mer6 mer7A1 #> 1 3.405371e-119    Ttr      1    1    1      1 #> 2  1.358683e-32  Kpna6      0    0    0      0 #> 3  8.630849e-31  Aplp2      1    0    1      0 #> 4  5.144824e-26  Mmp12      0    0    0      0 #> 5  1.122577e-23  Stac3      0    0    0      0 #> 6  1.954121e-22  Gpnmb      0    0    0      0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"match-seeds-with-mismatches-and-indels-allowed","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Counting seed matches in transcripts > Match multiple seeds","what":"Match seeds with mismatches and indels allowed","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"can also allow inexact seed matches analysis mismatches indels arguments. names can adjusted reflect arguments using col.name argument.","code":"for (indel.bool in c(TRUE, FALSE)){   for (mm in c(0,1,2)){     for (seed in c(\"mer7m8\", \"mer8\", \"mer6\", \"mer7A1\")){       res <- SeedMatchR(res,                          anno.db$gtf,                          features$seqs,                          guide.seq,                          seed.name = seed,                          col.name = paste0(seed, \".\", \"mm\", mm, \"_indel\", indel.bool),                          mismatches = mm,                          indels = indel.bool)     }   } }  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 mer8 mer6 mer7A1 mer7m8.mm0_indelTRUE #> 1 3.405371e-119    Ttr      1    1    1      1                    1 #> 2  1.358683e-32  Kpna6      0    0    0      0                    0 #> 3  8.630849e-31  Aplp2      1    0    1      0                    1 #> 4  5.144824e-26  Mmp12      0    0    0      0                    0 #> 5  1.122577e-23  Stac3      0    0    0      0                    0 #> 6  1.954121e-22  Gpnmb      0    0    0      0                    0 #>   mer8.mm0_indelTRUE mer6.mm0_indelTRUE mer7A1.mm0_indelTRUE #> 1                  1                  1                    1 #> 2                  0                  0                    0 #> 3                  0                  1                    0 #> 4                  0                  0                    0 #> 5                  0                  0                    0 #> 6                  0                  0                    0 #>   mer7m8.mm1_indelTRUE mer8.mm1_indelTRUE mer6.mm1_indelTRUE #> 1                    1                  1                  2 #> 2                   11                  3                 29 #> 3                    3                  2                 12 #> 4                    0                  0                  6 #> 5                    1                  1                  1 #> 6                    1                  0                  7 #>   mer7A1.mm1_indelTRUE mer7m8.mm2_indelTRUE mer8.mm2_indelTRUE #> 1                    1                    4                  2 #> 2                    7                   94                 21 #> 3                    6                   38                 15 #> 4                    4                   18                  6 #> 5                    1                    4                  2 #> 6                    1                   18                  6 #>   mer6.mm2_indelTRUE mer7A1.mm2_indelTRUE mer7m8.mm0_indelFALSE #> 1                 14                    6                     1 #> 2                204                   58                     0 #> 3                101                   38                     1 #> 4                 41                   16                     0 #> 5                 14                    8                     0 #> 6                 50                   20                     0 #>   mer8.mm0_indelFALSE mer6.mm0_indelFALSE mer7A1.mm0_indelFALSE #> 1                   1                   1                     1 #> 2                   0                   0                     0 #> 3                   0                   1                     0 #> 4                   0                   0                     0 #> 5                   0                   0                     0 #> 6                   0                   0                     0 #>   mer7m8.mm1_indelFALSE mer8.mm1_indelFALSE mer6.mm1_indelFALSE #> 1                     1                   1                   1 #> 2                     6                   3                  18 #> 3                     3                   2                  12 #> 4                     0                   0                   2 #> 5                     1                   1                   1 #> 6                     1                   0                   6 #>   mer7A1.mm1_indelFALSE mer7m8.mm2_indelFALSE mer8.mm2_indelFALSE #> 1                     1                     3                   1 #> 2                     6                    39                  12 #> 3                     6                    22                   8 #> 4                     1                     7                   1 #> 5                     1                     2                   1 #> 6                     0                     9                   2 #>   mer6.mm2_indelFALSE mer7A1.mm2_indelFALSE #> 1                   6                     1 #> 2                 111                    35 #> 3                  62                    22 #> 4                  25                    10 #> 5                   7                     3 #> 6                  28                    11"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"comparing-the-expression-profiles-of-seed-targets-to-background","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Comparing the expression profiles of seed targets to background","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"Many factors perturb gene expression, like miRNA, show cumulative changes targets gene expression. Cumulative changes profile genes expression can visualized tested emperical distribution function (ecdf) coupled statistical test Kolmogorov-Smirnov test. SeedMatchR provides functions comparing log2(Fold Change) two gene sets. function deseq_fc_ecdf designed work directly DESeq2 results data frame. Required Inputs: res: DESeq2 results data frame gene.lists: list lists containing gene names","code":"# Gene set 1  mer7m8.list = res$gene_id[res$mer7m8.mm0_indelFALSE >= 1 & res$mer8.mm0_indelFALSE ==0]  # Gene set 2  mer8.list = res$gene_id[res$mer8.mm0_indelFALSE >= 1]  background.list = res$gene_id[res$mer7m8.mm0_indelFALSE == 0 & res$mer8.mm0_indelFALSE == 0]  ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list, \"mer8\" = mer8.list, \"mer7m8\" = mer7m8.list),                              stats.test = \"KS\",                               factor.order = c(\"Background\", \"mer8\", \"mer7m8\"),                               null.name = \"Background\",                              target.name = \"mer8\",                               alternative = \"greater\") #> Comparing: Background vs. mer8  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"using-seedmatchr-to-explore-potential-small-activating-rna-effects","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Using SeedMatchR to explore potential small activating RNA effects","title":"Find Matches to Canonical siRNA Seeds in Genomic Features with SeedMatchR","text":"","code":"# Group transcripts by gene sequences <- transcriptsBy(anno.db$tx.db, by=\"gene\")  # Extract promoter sequences from tx.db object prom.seq = getPromoterSeq(sequences,                anno.db$dna,                  upstream=2000,                  downstream=100)  # perform a seed search of the promoter sequences. Set tx.id.col to F to use gene annotations res = SeedMatchR(res, anno.db$gtf, prom.seq@unlistData, guide.seq, tx.id.col = FALSE, col.name = \"promoter.mer7m8\")  # Find the genes with matches promoterWseed = res$gene_id[res$promoter.mer7m8 >= 1]  # Generate the background list of genes background.list = res$gene_id[!(res$gene_id %in% promoterWseed)]  # Plot ecdf results for promoter matches with stats testing ecdf.results = deseq_fc_ecdf(res,                               title = \"Ttr D1 30mkg\",                              list(\"Background\" = background.list,                                    \"Promoter w/ mer7m8\" = promoterWseed),                              stats.test = \"KS\",                               factor.order = c(\"Background\",                                                \"Promoter w/ mer7m8\"),                               null.name = \"Background\",                              target.name = \"Promoter w/ mer7m8\",                              alternative = \"less\",                              palette = c(\"black\", \"#d35400\")) #> Comparing: Background vs. Promoter w/ mer7m8  ecdf.results$plot sessionInfo()  #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] rtracklayer_1.60.1     GenomicFeatures_1.52.2 AnnotationDbi_1.62.2   #>  [4] Biobase_2.60.0         GenomicRanges_1.52.1   msa_1.32.0             #>  [7] Biostrings_2.68.1      GenomeInfoDb_1.36.4    XVector_0.40.0         #> [10] IRanges_2.34.1         S4Vectors_0.38.2       BiocGenerics_0.46.0    #> [13] SeedMatchR_1.1.1       #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3            jsonlite_1.8.7                #>   [3] magrittr_2.0.3                farver_2.1.1                  #>   [5] rmarkdown_2.25                fs_1.6.3                      #>   [7] BiocIO_1.10.0                 zlibbioc_1.46.0               #>   [9] ragg_1.2.6                    vctrs_0.6.4                   #>  [11] memoise_2.0.1                 Rsamtools_2.16.0              #>  [13] RCurl_1.98-1.12               ggtree_3.8.2                  #>  [15] R4RNA_1.28.0                  htmltools_0.5.6.1             #>  [17] S4Arrays_1.0.6                progress_1.2.2                #>  [19] AnnotationHub_3.8.0           curl_5.1.0                    #>  [21] gridGraphics_0.5-1            proj4_1.0-13                  #>  [23] sass_0.4.7                    KernSmooth_2.23-21            #>  [25] bslib_0.5.1                   desc_1.4.2                    #>  [27] cachem_1.0.8                  GenomicAlignments_1.36.0      #>  [29] ggalt_0.4.0                   mime_0.12                     #>  [31] lifecycle_1.0.3               pkgconfig_2.0.3               #>  [33] Matrix_1.5-4.1                R6_2.5.1                      #>  [35] fastmap_1.1.1                 GenomeInfoDbData_1.2.10       #>  [37] MatrixGenerics_1.12.3         shiny_1.7.5.1                 #>  [39] digest_0.6.33                 aplot_0.2.2                   #>  [41] colorspace_2.1-0              patchwork_1.1.3               #>  [43] rprojroot_2.0.3               textshaping_0.3.7             #>  [45] RSQLite_2.3.1                 labeling_0.4.3                #>  [47] filelock_1.0.2                fansi_1.0.5                   #>  [49] polyclip_1.10-6               httr_1.4.7                    #>  [51] abind_1.4-5                   compiler_4.3.1                #>  [53] bit64_4.0.5                   withr_2.5.1                   #>  [55] BiocParallel_1.34.2           DBI_1.1.3                     #>  [57] ggforce_0.4.1                 Rttf2pt1_1.3.12               #>  [59] maps_3.4.1                    biomaRt_2.56.1                #>  [61] MASS_7.3-60                   rappdirs_0.3.3                #>  [63] DelayedArray_0.26.7           rjson_0.2.21                  #>  [65] tools_4.3.1                   ape_5.7-1                     #>  [67] interactiveDisplayBase_1.38.0 httpuv_1.6.12                 #>  [69] extrafontdb_1.0               glue_1.6.2                    #>  [71] restfulr_0.0.15               nlme_3.1-162                  #>  [73] promises_1.2.1                grid_4.3.1                    #>  [75] generics_0.1.3                gtable_0.3.4                  #>  [77] tidyr_1.3.0                   hms_1.1.3                     #>  [79] xml2_1.3.5                    utf8_1.2.4                    #>  [81] BiocVersion_3.17.1            pillar_1.9.0                  #>  [83] stringr_1.5.0                 yulab.utils_0.1.0             #>  [85] later_1.3.1                   tweenr_2.0.2                  #>  [87] dplyr_1.1.3                   treeio_1.24.3                 #>  [89] BiocFileCache_2.8.0           lattice_0.21-8                #>  [91] bit_4.0.5                     tidyselect_1.2.0              #>  [93] knitr_1.44                    SummarizedExperiment_1.30.2   #>  [95] xfun_0.40                     matrixStats_1.0.0             #>  [97] seqmagick_0.1.6               stringi_1.7.12                #>  [99] lazyeval_0.2.2                ggfun_0.1.3                   #> [101] yaml_2.3.7                    evaluate_0.22                 #> [103] codetools_0.2-19              extrafont_0.19                #> [105] tibble_3.2.1                  ggmsa_1.6.0                   #> [107] BiocManager_1.30.22           ggplotify_0.1.2               #> [109] cli_3.6.1                     ash_1.0-15                    #> [111] xtable_1.8-4                  systemfonts_1.0.5             #> [113] munsell_0.5.0                 jquerylib_0.1.4               #> [115] Rcpp_1.0.11                   dbplyr_2.3.4                  #> [117] png_0.1-8                     XML_3.99-0.14                 #> [119] parallel_4.3.1                ellipsis_0.3.2                #> [121] pkgdown_2.0.7                 ggplot2_3.4.4                 #> [123] blob_1.2.4                    prettyunits_1.2.0             #> [125] bitops_1.0-7                  tidytree_0.4.5                #> [127] scales_1.2.1                  purrr_1.0.2                   #> [129] crayon_1.5.2                  rlang_1.1.1                   #> [131] KEGGREST_1.40.1"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"can install development version SeedMatchR GitHub stable build CRAN.","code":"# Install from GitHub install.packages(\"devtools\") devtools::install_github(\"tacazares/SeedMatchR\") library(SeedMatchR)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load example data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication: guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno A, LeBlanc S, Liebow A, Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. From bench to bedside: Improving the clinical safety of GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600. # siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"download-data-only-need-to-perform-once-can-skip-to-loading-if-done","dir":"Articles","previous_headings":"Load example data","what":"Download data (only need to perform once, can skip to loading if done)","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"start downloading example data set. function download three files GEO accession GSE184929. files represent three samples different siRNA treatments two dosages.","code":"get_example_data(\"sirna\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-example-data-1","dir":"Articles","previous_headings":"Load example data","what":"Load example data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"can load example data environment. DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res.","code":"sirna.data = load_example_data(\"sirna\") res <- sirna.data$Schlegel_2022_Ttr_D1_10mkg  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = T)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-annotations","dir":"Articles","previous_headings":"","what":"Load Annotations","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"next load annotations rat. step described vignette.","code":"# Load the species specific annotation database object anno.db <- load_species_anno_db(\"rat\")  # Load the specific features and sequences of interest features = get_feature_seqs(anno.db$tx.db, anno.db$dna, feature.type = \"3UTR\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"search-features-for-seed-matches","dir":"Articles","previous_headings":"","what":"Search features for seed matches","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"","code":"res = SeedMatchR(res, anno.db$gtf, features$seqs, guide.seq, \"mer7m8\")  head(res) #>              gene_id   baseMean log2FoldChange     lfcSE       stat #> 1 ENSRNOG00000016275 4091.69884     -8.4473574        NA -30.515742 #> 2 ENSRNOG00000042237   65.09709     -2.0505223 0.1928097 -10.634955 #> 3 ENSRNOG00000000127  473.07585     -0.9871468 0.1079412  -9.145227 #> 4 ENSRNOG00000047179 2033.36328     -0.7260060 0.1044405  -6.951386 #> 5 ENSRNOG00000019525 2064.65901     -0.6957186 0.1087750  -6.395941 #> 6 ENSRNOG00000004821   68.37800      1.1960943 0.1957843   6.109246 #>          pvalue          padj symbol mer7m8 #> 1 1.611228e-204 1.223406e-200    Ttr      1 #> 2  2.049278e-26  7.780083e-23 Tm6sf2      0 #> 3  5.950483e-20  1.506067e-16  Kpna6      0 #> 4  3.617155e-12  6.866265e-09  Aplp2      1 #> 5  1.595611e-10  2.423095e-07  Hspa9      0 #> 6  1.001031e-09  1.266804e-06  Sntb1      0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"preparing-mirdb-for-use-with-seedmatchr","dir":"Articles","previous_headings":"","what":"Preparing miRDB for use with SeedMatchR","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"miRDB database used identify mRNA predicted targets miRNA. download latest version miRDB website modify data include information gene symbol, ENTREZ ID, ENSEMBL ID. use org.Rn.eg.db data package access species specific annotation information ENSEMBL.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"download-mirdb-only-needs-to-be-performed-once-can-skip-to-loading-if-done","dir":"Articles","previous_headings":"Preparing miRDB for use with SeedMatchR","what":"Download miRDB (only needs to be performed once, can skip to loading if done)","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"","code":"get_example_data(\"mirna\") #> Example data directory being created at: /tmp/Rtmp1K20tK #> Warning in dir.create(data.path, recursive = TRUE): '/tmp/Rtmp1K20tK' already #> exists"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-mirdb-into-the-environment","dir":"Articles","previous_headings":"Preparing miRDB for use with SeedMatchR","what":"Load miRDB into the environment","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"","code":"mirdb = load_example_data(\"mirna\")  mirdb.rat = mirdb[mirdb$species == \"rno\",]  head(mirdb.rat) #>                miRDB.ID target.REFSEQ.ID target.score species  miRNA.name #> 6630977 rno-let-7a-1-3p     NM_001105825     56.73140     rno let-7a-1-3p #> 6630978 rno-let-7a-1-3p     NM_001025710     96.90071     rno let-7a-1-3p #> 6630979 rno-let-7a-1-3p        NM_022257     80.13760     rno let-7a-1-3p #> 6630980 rno-let-7a-1-3p     NM_001107001     85.45625     rno let-7a-1-3p #> 6630981 rno-let-7a-1-3p     NM_001037184     93.84484     rno let-7a-1-3p #> 6630982 rno-let-7a-1-3p     NM_001127552     72.10032     rno let-7a-1-3p"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"map-ensembl-names","dir":"Articles","previous_headings":"Preparing miRDB for use with SeedMatchR","what":"Map ENSEMBL names","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"Since names target genes REFSEQ format, use R package org.Rn.eg.db help map REFSEQ IDs ENSEMBL IDs.","code":"library(org.Rn.eg.db) #> Loading required package: AnnotationDbi #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:AnnotationDbi': #>  #>     select #> The following object is masked from 'package:Biobase': #>  #>     combine #> The following objects are masked from 'package:GenomicRanges': #>  #>     intersect, setdiff, union #> The following object is masked from 'package:GenomeInfoDb': #>  #>     intersect #> The following objects are masked from 'package:IRanges': #>  #>     collapse, desc, intersect, setdiff, slice, union #> The following objects are masked from 'package:S4Vectors': #>  #>     first, intersect, rename, setdiff, setequal, union #> The following objects are masked from 'package:BiocGenerics': #>  #>     combine, intersect, setdiff, union #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # Create the annotation database based on refseq, ensembl, and gene symbol annotations mir.targets = AnnotationDbi::select(org.Rn.eg.db,                                       keys = mirdb.rat[,2],                                       keytype =\"REFSEQ\",                                       columns=c(\"ENSEMBL\", \"SYMBOL\", \"ENTREZID\"),                                       multiVals=\"list\") #> 'select()' returned many:many mapping between keys and columns    # Find the IDs as as ENSEMBL IDs and return as a list mir.targ.ens <- mir.targets %>%     group_by(REFSEQ) %>%     summarise(ENSEMBL_ID = toString(unique(ENSEMBL)))  # Match the IDs for ENSEMBL ref2ens <- mir.targ.ens$ENSEMBL_ID[match(mirdb.rat$target.REFSEQ.ID,                                            mir.targ.ens$REFSEQ)]  # Bind the new columns mirdb.rat = cbind(mirdb.rat, ref2ens)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"finding-mirna-target-genes-based-on-mirna-expression-data","dir":"Articles","previous_headings":"","what":"Finding miRNA target genes based on miRNA expression data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"smallRNAseq expression data, can use decide miRNA potentially expressed system. , can follow approach identify public small RNAseq experiments generate list top expressed microRNA.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"public-rat-liver-small-rna-expression-data","dir":"Articles","previous_headings":"Finding miRNA target genes based on miRNA expression data","what":"Public rat liver small RNA expression data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"example looking miRNA expression data 6 week old female rat liver baseline conditions. data collected GEO accession GSE172269. four replicates GSM5251324, GSM5251325, GSM5251326, GSM5251327. case, work normalized counts data. take average across replicates group find average miRNA expression. sort list highest expressed miRNA. can choose cutoff based expression, rank, combination two. data provided data object called GSE172269_F_Lvr_6wks_miRNA.","code":"top_10 = c(\"rno-miR-192-5p\", \"rno-miR-22-3p\", \"rno-miR-148a-3p\", \"rno-miR-10a-5p\", \"rno-miR-26a-5p\", \"rno-miR-21-5p\", \"rno-miR-143-3p\", \"rno-miR-27b-3p\", \"rno-miR-191a-5p\", \"rno-miR-122-5p\")  # subset the database according to the miRNA of interest and the target score mir.targets.score90 = mirdb.rat$ref2ens[mirdb.rat[,\"miRDB.ID\"] %in% top_10 & mirdb.rat[,3]>= 90]  # Remove any NA values mir.targets.score90 = mir.targets.score90[!is.na(mir.targets.score90)]  # unlist the string list of names mir.targets.score90 = unique(unlist(lapply(mir.targets.score90,                                          stringr::str_split,                                          \", \")))"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"ecdf-for-log2foldchange-of-mirna-targets-compared-to-genes-with-seed-matches","dir":"Articles","previous_headings":"","what":"ECDF for log2(FoldChange) of miRNA targets compared to genes with seed matches","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"analysis compare genes mer7m8 seed match targets miRNA expression DESeq2 experiments. also third group compares shared gene targets siRNA miRNA.","code":"# Set of genes that are specific to mer7m8 seed matches mer7m8.list = res$gene_id[res$mer7m8 >= 1 & !(res$gene_id %in% mir.targets.score90)]  # Set of genes that are specific to seed and miRNA seed_and_mir = res$gene_id[res$mer7m8 >= 1 & res$gene_id %in% mir.targets.score90]  # Set of genes that is specific to miRNA only mir.targets = mir.targets.score90[!mir.targets.score90 %in% seed_and_mir]  # Generate the background list of genes background.list = res$gene_id[!(res$gene_id %in% mer7m8.list) & !(res$gene_id %in% mir.targets) & !(res$gene_id %in% seed_and_mir)]    ecdf.results = deseq_fc_ecdf(res,                               title = \"Ttr D1 30mkg\",                              list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list,                                    \"Top 10 miRNA\" = mir.targets,                                    \"Seed and miRNA\" = seed_and_mir),                              stats.test = \"KS\",                               factor.order = c(\"Background\",                                                \"mer7m8\",                                                \"Top 10 miRNA\",                                                \"Seed and miRNA\"),                               null.name = \"Background\",                              target.name = \"Top 10 miRNA\") #> Comparing: Background vs. Top 10 miRNA  ecdf.results$plot sessionInfo()  #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.1.3          org.Rn.eg.db_3.17.0  AnnotationDbi_1.62.2 #>  [4] Biobase_2.60.0       rtracklayer_1.60.1   GenomicRanges_1.52.1 #>  [7] GenomeInfoDb_1.36.4  IRanges_2.34.1       S4Vectors_0.38.2     #> [10] BiocGenerics_0.46.0  SeedMatchR_1.1.1     #>  #> loaded via a namespace (and not attached): #>   [1] DBI_1.1.3                     bitops_1.0-7                  #>   [3] biomaRt_2.56.1                rlang_1.1.1                   #>   [5] magrittr_2.0.3                matrixStats_1.0.0             #>   [7] compiler_4.3.1                RSQLite_2.3.1                 #>   [9] GenomicFeatures_1.52.2        png_0.1-8                     #>  [11] systemfonts_1.0.5             vctrs_0.6.4                   #>  [13] stringr_1.5.0                 pkgconfig_2.0.3               #>  [15] crayon_1.5.2                  fastmap_1.1.1                 #>  [17] dbplyr_2.3.4                  XVector_0.40.0                #>  [19] ellipsis_0.3.2                labeling_0.4.3                #>  [21] utf8_1.2.4                    Rsamtools_2.16.0              #>  [23] promises_1.2.1                rmarkdown_2.25                #>  [25] ragg_1.2.6                    purrr_1.0.2                   #>  [27] bit_4.0.5                     xfun_0.40                     #>  [29] zlibbioc_1.46.0               cachem_1.0.8                  #>  [31] jsonlite_1.8.7                progress_1.2.2                #>  [33] blob_1.2.4                    later_1.3.1                   #>  [35] DelayedArray_0.26.7           BiocParallel_1.34.2           #>  [37] interactiveDisplayBase_1.38.0 parallel_4.3.1                #>  [39] prettyunits_1.2.0             R6_2.5.1                      #>  [41] bslib_0.5.1                   stringi_1.7.12                #>  [43] jquerylib_0.1.4               Rcpp_1.0.11                   #>  [45] SummarizedExperiment_1.30.2   knitr_1.44                    #>  [47] httpuv_1.6.12                 Matrix_1.5-4.1                #>  [49] tidyselect_1.2.0              abind_1.4-5                   #>  [51] yaml_2.3.7                    codetools_0.2-19              #>  [53] curl_5.1.0                    lattice_0.21-8                #>  [55] tibble_3.2.1                  shiny_1.7.5.1                 #>  [57] withr_2.5.1                   KEGGREST_1.40.1               #>  [59] evaluate_0.22                 desc_1.4.2                    #>  [61] BiocFileCache_2.8.0           xml2_1.3.5                    #>  [63] Biostrings_2.68.1             pillar_1.9.0                  #>  [65] BiocManager_1.30.22           filelock_1.0.2                #>  [67] MatrixGenerics_1.12.3         generics_0.1.3                #>  [69] rprojroot_2.0.3               RCurl_1.98-1.12               #>  [71] BiocVersion_3.17.1            hms_1.1.3                     #>  [73] ggplot2_3.4.4                 munsell_0.5.0                 #>  [75] scales_1.2.1                  xtable_1.8-4                  #>  [77] glue_1.6.2                    tools_4.3.1                   #>  [79] AnnotationHub_3.8.0           BiocIO_1.10.0                 #>  [81] GenomicAlignments_1.36.0      fs_1.6.3                      #>  [83] XML_3.99-0.14                 grid_4.3.1                    #>  [85] colorspace_2.1-0              GenomeInfoDbData_1.2.10       #>  [87] restfulr_0.0.15               cli_3.6.1                     #>  [89] rappdirs_0.3.3                textshaping_0.3.7             #>  [91] fansi_1.0.5                   S4Arrays_1.0.6                #>  [93] gtable_0.3.4                  sass_0.4.7                    #>  [95] digest_0.6.33                 farver_2.1.1                  #>  [97] rjson_0.2.21                  memoise_2.0.1                 #>  [99] htmltools_0.5.6.1             pkgdown_2.0.7                 #> [101] lifecycle_1.0.3               httr_1.4.7                    #> [103] mime_0.12                     bit64_4.0.5"},{"path":"https://tacazares.github.io/SeedMatchR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tareian Cazares. Author, maintainer. Gulcin Ozer. Author. Jibo Wang. Author. Rick Higgs. Author. Eli Lilly Company. Copyright holder.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cazares T, Ozer G, Wang J, Higgs R (2023). SeedMatchR: Find Matches Canonical SiRNA Seeds Genomic Features. R package version 1.1.1, https://tacazares.github.io/SeedMatchR/.","code":"@Manual{,   title = {SeedMatchR: Find Matches to Canonical SiRNA Seeds in Genomic Features},   author = {Tareian Cazares and Gulcin Ozer and Jibo Wang and Rick Higgs},   year = {2023},   note = {R package version 1.1.1},   url = {https://tacazares.github.io/SeedMatchR/}, }"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"seedmatchr","dir":"","previous_headings":"","what":"Find Matches to Canonical SiRNA Seeds in Genomic Features","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"goal SeedMatchR help users identify potential seed-mediated effects RNAseq data.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"can install development version SeedMatchR GitHub stable build CRAN.","code":"# Install from GitHub install.packages(\"devtools\") devtools::install_github(\"tacazares/SeedMatchR\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"quick-start-example-with-public-sirna-data","dir":"","previous_headings":"","what":"Quick start example with public siRNA data","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication: guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno A, LeBlanc S, Liebow A, Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. From bench to bedside: Improving the clinical safety of GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600. # siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"load-rat-specific-annotation-data","dir":"","previous_headings":"Quick start example with public siRNA data","what":"Load rat specific annotation data.","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"use AnnotationHub derive GTF DNA sequence files species interest. derived annotations, save Rdata object increase speed loading datasets.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"load-annotation-databases","dir":"","previous_headings":"Quick start example with public siRNA data > Load rat specific annotation data.","what":"Load annotation databases","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"","code":"# Load the species specific annotation database object anno.db <- load_species_anno_db(\"rat\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"extract-features-and-sequences-of-interest-from-annotations","dir":"","previous_headings":"Quick start example with public siRNA data > Load rat specific annotation data.","what":"Extract features and sequences of interest from annotations","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"use annotations derive features feature sequences want scan gene.","code":"features = get_feature_seqs(anno.db$tx.db, anno.db$dna, feature.type = \"3UTR\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"prepare-deseq2-results","dir":"","previous_headings":"Quick start example with public siRNA data","what":"Prepare DESEQ2 Results","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"test data provided SeedMatchR derived 2022 publication Schlegel et al. data set represents DESeq2 analysis performed rat liver treated Ttr targeting siRNA. use example explore seed mediated activity.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"download-data-only-need-to-perform-once-can-skip-to-loading-if-done","dir":"","previous_headings":"Quick start example with public siRNA data > Prepare DESEQ2 Results","what":"Download data (only need to perform once, can skip to loading if done)","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"start downloading example data set. function download three files GEO accession GSE184929. files represent three samples different siRNA treatments two dosages.","code":"get_example_data(\"sirna\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"load-example-data","dir":"","previous_headings":"Quick start example with public siRNA data > Prepare DESEQ2 Results","what":"Load example data","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"can load example data environment. DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res.","code":"sirna.data = load_example_data(\"sirna\") res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"filter-example-results","dir":"","previous_headings":"Quick start example with public siRNA data > Prepare DESEQ2 Results","what":"Filter example results","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"DESeq2 results file filtered. function filter_deseq() can used filter results file log2FoldChange, padj, baseMean, remove NA entries.","code":"# Dimensions before filtering dim(res) # [1] 32883    6 #> [1] 32883     8  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = T)  # Dimensions after filtering dim(res) # [1] 13582     8 #> [1] 13582     8"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"counting-seed-matches-in-transcripts","dir":"","previous_headings":"Quick start example with public siRNA data","what":"Counting seed matches in transcripts","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"can perform seed match single seed using SeedMatchR() function.","code":"res = SeedMatchR(res, anno.db$gtf, features$seqs, guide.seq, \"mer7m8\")  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 #> 1 3.405371e-119    Ttr      1 #> 2  1.358683e-32  Kpna6      0 #> 3  8.630849e-31  Aplp2      1 #> 4  5.144824e-26  Mmp12      0 #> 5  1.122577e-23  Stac3      0 #> 6  1.954121e-22  Gpnmb      0"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"match-multiple-seeds","dir":"","previous_headings":"Quick start example with public siRNA data > Counting seed matches in transcripts","what":"Match multiple seeds","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"can perform seed matching available seeds using loop. results appended new column results data frame.","code":"for (seed in c(\"mer8\", \"mer6\", \"mer7A1\")){ res <- SeedMatchR(res, anno.db$gtf, features$seqs, guide.seq, seed.name = seed) }  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 mer8 mer6 mer7A1 #> 1 3.405371e-119    Ttr      1    1    1      1 #> 2  1.358683e-32  Kpna6      0    0    0      0 #> 3  8.630849e-31  Aplp2      1    0    1      0 #> 4  5.144824e-26  Mmp12      0    0    0      0 #> 5  1.122577e-23  Stac3      0    0    0      0 #> 6  1.954121e-22  Gpnmb      0    0    0      0"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"comparing-the-expression-profiles-of-seed-targets-to-background","dir":"","previous_headings":"Quick start example with public siRNA data","what":"Comparing the expression profiles of seed targets to background","title":"Find Matches to Canonical SiRNA Seeds in Genomic Features","text":"Many factors perturb gene expression, like miRNA, show cumulative changes targets gene expression. Cumulative changes profile genes expression can visualized tested emperical distribution function (ecdf) coupled statistical test Kolmogorov-Smirnov test. SeedMatchR provides functions comparing log2(Fold Change) two gene sets. function deseq_fc_ecdf designed work directly DESeq2 results data frame. Required Inputs: res: DESeq2 results data frame gene.lists: list lists containing gene names","code":"# Gene set 1  mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[res$mer7m8 == 0]  ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list),                              stats.test = \"KS\",                               factor.order = c(\"Background\",                                                \"mer7m8\"),                               null.name = \"Background\",                              target.name = \"mer7m8\",                               alternative = \"greater\") #> Comparing: Background vs. mer7m8  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SeedMatchR: Find Matches to Canonical SiRNA Seeds in Genomic Features — SeedMatchR-package","title":"SeedMatchR: Find Matches to Canonical SiRNA Seeds in Genomic Features — SeedMatchR-package","text":"-target gene knockdown using siRNA ideally results binding fully complementary regions mRNA transcripts induce cleavage. -target siRNA gene knockdown can occur several modes, one seed-mediated mechanism mimicking miRNA gene regulation. Seed-mediated -target effects occur ~8 nucleotides 5’ end guide strand, called seed region, bind 3’ untranslated regions mRNA, causing reduced translation. Experiments using siRNA knockdown paired RNA-seq can used detect siRNA sequences potential -target effects driven seed region. 'SeedMatchR' provides tools exploring detecting potential seed-mediated -target effects siRNA RNA-seq experiments. 'SeedMatchR' designed extend current differential expression analysis tools, 'DESeq2', annotating results predicted seed matches. Using publicly available data, demonstrate ability 'SeedMatchR' detect cumulative changes differential gene expression attributed siRNA seed regions.","code":""},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SeedMatchR: Find Matches to Canonical SiRNA Seeds in Genomic Features — SeedMatchR-package","text":"Maintainer: Tareian Cazares tareian.cazares@lilly.com (ORCID) Authors: Gulcin Ozer ozer_gulcin@lilly.com (ORCID) Jibo Wang Rick Higgs contributors: Eli Lilly Company [copyright holder]","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":null,"dir":"Reference","previous_headings":"","what":"Find seed matches in genomic features — SeedMatchR","title":"Find seed matches in genomic features — SeedMatchR","text":"Find seed matches DNAStringSet object sequences. function use get.seed extract seed sequence guide sequence. seed searched across rows DNAStringSet object using vpatterncount. function returns input DESeq2 results data.frame additional column contains counts input seed.name.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find seed matches in genomic features — SeedMatchR","text":"","code":"SeedMatchR(   res,   gtf,   seqs,   sequence,   seed.name = \"mer7m8\",   col.name = NULL,   mismatches = 0,   indels = FALSE,   tx.id.col = TRUE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find seed matches in genomic features — SeedMatchR","text":"res DESeq2 results data.frame gtf GTF file used map features genes. object must columns transcript_id gene_id seqs DNAStringSet object sequence information features. names sequences transcript names. sequence DNAString guide sequence oriented 5' > 3'. seed.name name specific seed extract. Options :  mer8, mer7A1, mer7m8, mer6 col.name string use column name. Defaults seed name mismatches number mismatches allow search indels Whether allow indels search tx.id.col Use transcript_id column instead gene_id","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find seed matches in genomic features — SeedMatchR","text":"modified DESeq2 results dataframe column named seed choice representing number match counts.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find seed matches in genomic features — SeedMatchR","text":"","code":"if (FALSE) { # interactive() library(dplyr)  seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_species_anno_db(\"human\")  features = get_feature_seqs(anno.db$tx.db, anno.db$dna)  # Load test data res <- Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res, anno.db$gtf, features$seqs, seq, \"mer7m8\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_gene_list_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if input gene lists overlap — check_gene_list_overlap","title":"Check if input gene lists overlap — check_gene_list_overlap","text":"Check input gene lists overlap","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_gene_list_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if input gene lists overlap — check_gene_list_overlap","text":"","code":"check_gene_list_overlap(gene.lists)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_gene_list_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if input gene lists overlap — check_gene_list_overlap","text":"gene.lists list gene lists. example: list(c(\"gene1\", \"gene2\"), c(\"gene1\"))","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_gene_list_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if input gene lists overlap — check_gene_list_overlap","text":"Warning gene sets overlap","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_gene_list_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if input gene lists overlap — check_gene_list_overlap","text":"","code":"# Overlap check_gene_list_overlap(list(c(\"gene1\", \"gene2\"), c(\"gene1\"))) #> Warning: Gene lists overlap!  #No overlap check_gene_list_overlap(list(c(\"gene1\", \"gene2\"), c(\"gene3\")))"},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the ECDF for DESeq2 log2(Fold Changes) — deseq_fc_ecdf","title":"Plot the ECDF for DESeq2 log2(Fold Changes) — deseq_fc_ecdf","text":"functions take DESeq2 results data.frame plot ecdf input gene.lists. gene sets plot provided list lists. Example: gene.lists = list(\"Background\" = c(\"gene1\", \"gene2\"), \"Target\" = c(\"gene2\", \"gene3\"), \"Overlap\" = c(\"gene2\")) function also perform statistical testing plot.hist TRUE. output saved PDF output.filename provided. Users can define groups compared statistical test using null.name target.name arguments. names must found gene.lists. factor.order used order groups analysis. functions returns: $plot: ECDF plot $stats: stats results object","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the ECDF for DESeq2 log2(Fold Changes) — deseq_fc_ecdf","text":"","code":"deseq_fc_ecdf(   res,   gene.lists,   title = \"ECDF\",   output.filename = NULL,   palette = SeedMatchR.palette,   factor.order = NULL,   x.lims = c(-1, 1),   stats.test = NULL,   alternative = \"greater\",   null.name = 1,   target.name = 2,   height = 5,   width = 5,   dpi = 320 )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the ECDF for DESeq2 log2(Fold Changes) — deseq_fc_ecdf","text":"res DESeq2 results dataframe gene.lists nest list gene names. Example: gene.lists = list(\"Background\" = gene.list2, \"Target\" = gene.list1, \"Overlap\" = gene.list3) title tile plot output.filename output filename provided, plot saved. palette color palette use curves factor.order order use legends x.lims xlimits range stats.test statistic test use. Options: KS, Kuiper, DTS, CVM, AD, Wass alternative alternative hypothesis test. Options: greater, less, two.sided null.name name gene.list use null ecdf plots target.name name gene.list use target ecdf plots height Plot height inches width Plot width inches dpi dpi resolution figure","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the ECDF for DESeq2 log2(Fold Changes) — deseq_fc_ecdf","text":"ggplot object ECDF plot","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the ECDF for DESeq2 log2(Fold Changes) — deseq_fc_ecdf","text":"","code":"if (FALSE) { # interactive() library(dplyr)  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_species_anno_db(\"human\")  features = get_feature_seqs(anno.db$tx.db, anno.db$dna)  # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res, anno.db$gtf, features$seqs, guide.seq, \"mer7m8\")  # Gene set 1 mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[!(res$mer7m8 %in% mer7m8.list)]  ecdf.results = deseq_fc_ecdf(res, list(\"Background\" = background.list, \"mer7m8\" = mer7m8.list), stats.test = \"KS\", factor.order = c(\"Background\", \"mer7m8\"), null.name = \"Background\", target.name = \"mer7m8\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and parse DESeq2 output from GSE184929 — download_parse_file","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"Download parse DESeq2 output GSE184929","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"","code":"download_parse_file(download.path, output.path)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"download.path File url downloaded output.path Filename used saving downloaded file","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"DESeq2 results data.frame.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"","code":"if (FALSE) { # interactive() download_parse_file() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for differences in log2(Fold Change) ECDFs between two gene lists using\nthe stats package — ecdf_stat_test","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists using\nthe stats package — ecdf_stat_test","text":"function uses stats package test ECDF log2(Fold Changes) two groups based DESeq2 analysis. inputs function DESeq2 results data.frame two sets gene IDs called gene.list1 gene.list2. functions look column called log2FoldChange dataframe.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists using\nthe stats package — ecdf_stat_test","text":"","code":"ecdf_stat_test(   res,   gene.list1,   gene.list2,   stats.test = \"KS\",   alternative = \"greater\" )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists using\nthe stats package — ecdf_stat_test","text":"res Input results file data frame gene.list1 Gene list 1: Usually null distribution gene.list2 Gene list 2: Target set genes stats.test Stats test use. Options: KS Wilcoxen alternative alternative hypothesis test. Options: greater, less, two.sided","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists using\nthe stats package — ecdf_stat_test","text":"vector containing dstat pvalue","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists using\nthe stats package — ecdf_stat_test","text":"","code":"if (FALSE) { # interactive() library(dplyr)  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_species_anno_db(\"human\")  features = get_feature_seqs(anno.db$tx.db, anno.db$dna)  # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res, anno.db$gtf, features$seqs, guide.seq, \"mer7m8\")  # Gene set 1 mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[!(res$mer7m8 %in% mer7m8.list)]  ecdf.res = ecdf_stat_test(res, mer7m8.list, background.list) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_deseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter DESEQ2 Results for SeedMatchR — filter_deseq","title":"Filter DESEQ2 Results for SeedMatchR — filter_deseq","text":"Filter DESeqDataSet results use seed matching counting functions. filtering criteria : Filter genes expressed counted : baseMean = 0 & pvalue = NA & log2FoldChange = NA Filter genes expressed, difference across groups: log2FoldChange = 0 Filter genes extreme outliers: pvalue = NA padj = NA Filter genes excluded independent filtering. padj = NA Filter results fdr.cutoff Filter results log2FoldChange Filter results baseMean Remove NA gene_ids log2FoldChange values","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_deseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter DESEQ2 Results for SeedMatchR — filter_deseq","text":"","code":"filter_deseq(   res,   fdr.cutoff = 1,   fc.cutoff = 0,   rm.na.name = FALSE,   rm.na.log2fc = FALSE,   baseMean.cutoff = 0 )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_deseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter DESEQ2 Results for SeedMatchR — filter_deseq","text":"res DESEQ2 results data frame fdr.cutoff false discovery rate cutoff use. fc.cutoff fold change cutoff use. absolute value used cutoff values greater---equal-kept. rm.na.name Remove na values gene_name column rm.na.log2fc Remove na values log2FoldChange column baseMean.cutoff minimum baseMean expression cutoff","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_deseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter DESEQ2 Results for SeedMatchR — filter_deseq","text":"modified DESEQ2 results table filtered","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_deseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter DESEQ2 Results for SeedMatchR — filter_deseq","text":"","code":"if (FALSE) { # interactive() # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example DESeq2 data from GEO — get_example_data","title":"Download example DESeq2 data from GEO — get_example_data","text":"function download data can used  SeedMatchR. Choosing 'sirna' download 3 DESeq2 results files GSE184929. Choosing 'mirna' download miRDB database tsv.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example DESeq2 data from GEO — get_example_data","text":"","code":"get_example_data(example.type)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download example DESeq2 data from GEO — get_example_data","text":"example.type Name example load. Options: sirna, mirna","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download example DESeq2 data from GEO — get_example_data","text":"None?","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download example DESeq2 data from GEO — get_example_data","text":"","code":"if (FALSE) { # interactive() get_example_data() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_feature_seqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transcripts features and feature sequences — get_feature_seqs","title":"Get transcripts features and feature sequences — get_feature_seqs","text":"function used get genomic features interest DNA sequences associated . function takes advantage GenomicFeatures package functions threeUTRsByTranscript, fiveUTRsByTranscript, exonsBy, intronsByTranscript, cdsBy. functions used generate features given input tx.db object. 2bit dna input also required extracting features sequences. output function : $db: feature GRanges object $seqs: DNAStringSet sequences associated features","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_feature_seqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transcripts features and feature sequences — get_feature_seqs","text":"","code":"get_feature_seqs(tx.db, dna, feature.type = \"3UTR\")"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_feature_seqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transcripts features and feature sequences — get_feature_seqs","text":"tx.db tx.db object dna 2bit dna sequence feature.type type feature return. Options: 3UTR, 5UTR, exons, introns, cds","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_feature_seqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transcripts features and feature sequences — get_feature_seqs","text":"list containing feature db object feature sequences","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_feature_seqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get transcripts features and feature sequences — get_feature_seqs","text":"","code":"if (FALSE) { # interactive() anno.db = load_species_anno_db(\"human\")  features = get_feature_seqs(anno.db$tx.db, anno.db$dna) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the target seed sequence given a canonical seed name and input sequence — get_seed","title":"Get the target seed sequence given a canonical seed name and input sequence — get_seed","text":"Given sequence greater 8 bp oriented 5' -> 3' seed definition, function return object containing seed-specific sequence information. Users can input custom seed name, must provide start position (start.pos) stop position (stop.pos) define range seed sequence. Built-options: mer8,  mer7A1, mer7m8, mer6 Note: seed definitions mer8 mer7A1 force U position g1. results target sequence searched.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the target seed sequence given a canonical seed name and input sequence — get_seed","text":"","code":"get_seed(guide.seq, seed.name = \"mer7m8\", start.pos = 1, stop.pos = 8)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the target seed sequence given a canonical seed name and input sequence — get_seed","text":"guide.seq character string greater 8 bp oriented 5'-> 3'. seed.name seed name interest. Options: mer8,  mer7A1, mer7m8, mer6. default list, start.pos stop.pos arguments used define seed. start.pos start position custom seed definition stop.pos stop position custom seed definition","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the target seed sequence given a canonical seed name and input sequence — get_seed","text":"object entries: Guide: Input guide sequence. Input expected RNA. Seed.Name: seed name. Seed.Seq.RNA: seed sequence RNAString Seed.Seq.DNA: seed sequence DNAString Target.Seq: target DNA sequence based reverse complement seed DNAString","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the target seed sequence given a canonical seed name and input sequence — get_seed","text":"","code":"# Example Ttr from Schlegel et al. 2022 guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  # Get seed match seed.seq = get_seed(guide.seq, \"mer7m8\")"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load example DESeq2 data into the environment — load_example_data","title":"Load example DESeq2 data into the environment — load_example_data","text":"Load example DESeq2 data environment","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load example DESeq2 data into the environment — load_example_data","text":"","code":"load_example_data(example.type)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load example DESeq2 data into the environment — load_example_data","text":"example.type Name example load. Options: sirna, mirna","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load example DESeq2 data into the environment — load_example_data","text":"Loads either Schlegel 2022 RNAseq data miRDB environment.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load example DESeq2 data into the environment — load_example_data","text":"","code":"if (FALSE) { # interactive() load_example_data() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Load species specific AnnotationDb — load_species_anno_db","title":"Load species specific AnnotationDb — load_species_anno_db","text":"Use AnnotationHub load species-specific GTF 2bit DNA sequences. function currently works human, rat, mouse. function return: $gtf: GRanges object containing GTF information $tx.db: tx.db object made GTF $dna: 2bit DNA sequence DNAStringSet","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load species specific AnnotationDb — load_species_anno_db","text":"","code":"load_species_anno_db(species.name, remove.na.rows = TRUE)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load species specific AnnotationDb — load_species_anno_db","text":"species.name Species name. Options: human, rat, mouse remove.na.rows Remove rows NA gene_id column","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load species specific AnnotationDb — load_species_anno_db","text":"Species specific AnnotationDb","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load species specific AnnotationDb — load_species_anno_db","text":"","code":"if (FALSE) { # interactive() anno.db = load_species_anno_db(\"human\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/plot_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Guide Strand with different optional seeds — plot_seeds","title":"Plot the Guide Strand with different optional seeds — plot_seeds","text":"Plot Guide Strand different optional seeds","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/plot_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Guide Strand with different optional seeds — plot_seeds","text":"","code":"plot_seeds(guide.seq)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/plot_seeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Guide Strand with different optional seeds — plot_seeds","text":"guide.seq Guide .k.anti-sense sequence oriented 5' > 3'. Sequence must greater 8 bp.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/plot_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the Guide Strand with different optional seeds — plot_seeds","text":"msaggplot guide sequence addition available seed sequences","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/plot_seeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the Guide Strand with different optional seeds — plot_seeds","text":"","code":"library(msa) #> Loading required package: Biostrings #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #> Loading required package: stats4 #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: XVector #> Loading required package: GenomeInfoDb #>  #> Attaching package: ‘Biostrings’ #> The following object is masked from ‘package:base’: #>  #>     strsplit  # Ttr siRNA sequence guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  # generate seed plot plotted.seeds = plot_seeds(guide.seq) #> use default substitution matrix #> Registered S3 methods overwritten by 'ggalt': #>   method                  from    #>   grid.draw.absoluteGrob  ggplot2 #>   grobHeight.absoluteGrob ggplot2 #>   grobWidth.absoluteGrob  ggplot2 #>   grobX.absoluteGrob      ggplot2 #>   grobY.absoluteGrob      ggplot2 #> Registered S3 methods overwritten by 'treeio': #>   method              from     #>   MRCA.phylo          tidytree #>   MRCA.treedata       tidytree #>   Nnode.treedata      tidytree #>   Ntip.treedata       tidytree #>   ancestor.phylo      tidytree #>   ancestor.treedata   tidytree #>   child.phylo         tidytree #>   child.treedata      tidytree #>   full_join.phylo     tidytree #>   full_join.treedata  tidytree #>   groupClade.phylo    tidytree #>   groupClade.treedata tidytree #>   groupOTU.phylo      tidytree #>   groupOTU.treedata   tidytree #>   inner_join.phylo    tidytree #>   inner_join.treedata tidytree #>   is.rooted.treedata  tidytree #>   nodeid.phylo        tidytree #>   nodeid.treedata     tidytree #>   nodelab.phylo       tidytree #>   nodelab.treedata    tidytree #>   offspring.phylo     tidytree #>   offspring.treedata  tidytree #>   parent.phylo        tidytree #>   parent.treedata     tidytree #>   root.treedata       tidytree #>   rootnode.phylo      tidytree #>   sibling.phylo       tidytree #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-111","dir":"Changelog","previous_headings":"","what":"SeedMatchR 1.1.1","title":"SeedMatchR 1.1.1","text":"CRAN release: 2023-10-24 Vignettes longer rendered. evaluating, issue internet connectivity caused build checks fail CRAN. now provided un-evaluated vignettes. Visit documentation page https://tacazares.github.io/SeedMatchR/.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-110","dir":"Changelog","previous_headings":"","what":"SeedMatchR 1.1.0","title":"SeedMatchR 1.1.0","text":"Addressed notes errors CRAN check https://www.r-project.org/nosvn/R.check/r-release-macos-arm64/SeedMatchR-00check.html Removed function dtat_histogram.R. needed. longer perform bootstrapping method testing. use built-R functions ks.test wilcoxen.test. Removed twosamples package dependency. Added stats package dependency.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-101","dir":"Changelog","previous_headings":"","what":"SeedMatchR 1.0.1","title":"SeedMatchR 1.0.1","text":"CRAN release: 2023-06-20 Example data saved temp directory Example data returned function instead writing env message() used instead print()","code":""},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-100","dir":"Changelog","previous_headings":"","what":"SeedMatchR 1.0.0","title":"SeedMatchR 1.0.0","text":"First release prepared CRAN submission","code":""},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-0009000","dir":"Changelog","previous_headings":"","what":"SeedMatchR 0.0.0.9000","title":"SeedMatchR 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
