[{"path":"https://tacazares.github.io/SeedMatchR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 SeedMatchR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"can install development version SeedMatchR GitHub stable build CRAN.","code":"# Install from GitHub install.packages(\"devtools\") devtools::install_github(\"tacazares/SeedMatchR\")"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"introduction-to-example-dataset","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Introduction to example dataset","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication: guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno A, LeBlanc S, Liebow A, Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. From bench to bedside: Improving the clinical safety of GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600. # siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"run-modes-and-input-data","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Run modes and input data","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"SeedMatchR can run two different modes. first mode designed DESEQ2 differential expression results second mode designed finding exact match positions regardless differential expression data. DESEQ2 mode map column match counts data.frame differential expression resutls. data.frame model return data.frame matches correspond interval ranges matches input DNAStringSet library searched. required inputs SeedMatchR list : character string representing siRNA RNA sequence. must greater 8 bp. GTF: gene transfer file containing species specific genomic information gene bodies. used derive list 3’ UTRs features used analysis. also used map transcript IDs gene IDs. Feature-specific DNAStringSet: DNAStringSet object sequences features interest. features must named according transcript derived . Examples include generated GenomicFeatures::extractTranscriptSeqs() paired functions like GenomicFeatures::threeUTRsByTranscript(). Seed name canonical seed want search custom definition associated start stop positions siRNA. Optional input: res: data frame DESEQ2 results. DESEQ2 results provided data.frame, SeedMatchR map total match counts new column data.frame. SeedMatchR provides functions helping wrangle many data types annotations. SeedMatchR makes extensive use AnnotationHub help access genomic annotations reproducible manner.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"prepare-species-specific-annotation-data","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Run modes and input data","what":"Prepare species-specific annotation data","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"function load_annotations() built annotation data human, rat, mouse annotations. information can found vignette annotations. can load species specific annotations using approach described . Running function take several minutes. Therefore might helpful save objects reload later plan use code repeated workflow.","code":"# Load the species specific annotation database object annodb = load_annotations(reference.name = \"rnor6\", canonical = FALSE, min.feature.width = 8, longest.utr = T)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"prepare-deseq2-results","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Run modes and input data","what":"Prepare DESEQ2 Results","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"DESEQ2 mode SeedMatchR assumes performing analysis DESEQ2 results outputs. first step load DESEQ2 results file data.frame. test data provided SeedMatchR derived 2022 publication Schlegel et al. data set represents DESeq2 analysis performed rat liver treated Ttr targeting siRNA. use example explore seed mediated activity. data set name long, renamed res.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"download-data-only-need-to-perform-once","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Run modes and input data","what":"Download data (only need to perform once)","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"start downloading example data set. function download three files GEO accession GSE184929. files represent three samples different siRNA treatments two dosages.","code":"get_example_data(\"sirna\") #> Example data directory being created at: /home/runner/.local/share/R/SeedMatchR #> Warning in dir.create(data.path, recursive = TRUE): #> '/home/runner/.local/share/R/SeedMatchR' already exists"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"load-example-data","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Run modes and input data","what":"Load example data","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"can load example data environment. DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res. DESEQ2 results file filtered. function filter_res() can used filter results file log2FoldChange, padj, baseMean, remove NA entries.","code":"sirna.data = load_example_data(\"sirna\") res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg # Dimensions before filtering  dim(res) # [1] 32883    6 #> [1] 32883     8  # Filter DESeq2 results for SeedMatchR res = filter_res(res)  # Dimensions after filtering dim(res) # [1] 13582     8 #> [1] 8124    8"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"get-the-seed-sequence-of-interest","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Get the seed sequence of interest","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"can extract seed sequence information siRNA input sequence using get_seed() function. inputs get_seed() function siRNA sequence interest name seed.","code":"# Get the seed sequence information for the seed of interest seed = get_seed(guide.seq = guide.seq, seed.name = \"mer7m8\")  seed #> $Seed.Name #> [1] \"mer7m8\" #>  #> $Guide #> 23-letter RNAString object #> seq: UUAUAGAGCAAGAACACUGUUUU #>  #> $Seed.Seq.RNA #> 7-letter RNAString object #> seq: UAUAGAG #>  #> $Seed.Seq.DNA #> 7-letter DNAString object #> seq: TATAGAG #>  #> $Target.Seq #> 7-letter DNAString object #> seq: CTCTATA"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"counting-seed-matches-in-transcripts","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Counting seed matches in transcripts","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"can perform seed match single seed using SeedMatchR() function.","code":"res = SeedMatchR(res = res,                   seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\")  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 #> 1 3.405371e-119    Ttr      1 #> 2  1.358683e-32  Kpna6      0 #> 3  8.630849e-31  Aplp2      1 #> 4  5.144824e-26  Mmp12      0 #> 5  1.122577e-23  Stac3      0 #> 6  1.954121e-22  Gpnmb      0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"match-multiple-seeds","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Counting seed matches in transcripts","what":"Match multiple seeds","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"can perform seed matching available seeds using loop. results appended new column results data frame.","code":"for (seed in c(\"mer8\", \"mer6\", \"mer7A1\")){ res = SeedMatchR(res = res,                   seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = seed) }  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 mer8 mer6 mer7A1 #> 1 3.405371e-119    Ttr      1    1    1      1 #> 2  1.358683e-32  Kpna6      0    0    0      0 #> 3  8.630849e-31  Aplp2      1    0    1      0 #> 4  5.144824e-26  Mmp12      0    0    0      0 #> 5  1.122577e-23  Stac3      0    0    0      0 #> 6  1.954121e-22  Gpnmb      0    0    0      0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"match-seeds-with-mismatches-and-indels-allowed","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Counting seed matches in transcripts > Match multiple seeds","what":"Match seeds with mismatches and indels allowed","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"can also allow inexact seed matches analysis mismatches indels arguments. names can adjusted reflect arguments using col.name argument.","code":"for (indel.bool in c(TRUE, FALSE)){     for (mm in c(0,1)){       for (seed in c(\"mer7m8\", \"mer8\", \"mer6\", \"mer7A1\")){         res <- SeedMatchR(res = res,                          seqs = annodb$seqs,                          sequence = guide.seq,                          seed.name = seed,                         col.name = paste0(seed,                                            \".\",                                            \"mm\", mm,                                            \"_indel\", indel.bool),                          max.mismatch = mm,                          with.indels = indel.bool)       }     }   }  head(res) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #> 3 ENSRNOG00000047179 1590.1745      -1.262411 0.1031403 -12.23974  1.906387e-34 #> 4 ENSRNOG00000030187  131.9206       3.422725 0.3032352  11.28736  1.515189e-29 #> 5 ENSRNOG00000008050   38.9921      -3.442834 0.3192776 -10.78320  4.132589e-27 #> 6 ENSRNOG00000008816  400.9526       2.794453 0.2661369  10.50006  8.632549e-26 #>            padj symbol mer7m8 mer8 mer6 mer7A1 mer7m8.mm0_indelTRUE #> 1 3.405371e-119    Ttr      1    1    1      1                    1 #> 2  1.358683e-32  Kpna6      0    0    0      0                    0 #> 3  8.630849e-31  Aplp2      1    0    1      0                    1 #> 4  5.144824e-26  Mmp12      0    0    0      0                    0 #> 5  1.122577e-23  Stac3      0    0    0      0                    0 #> 6  1.954121e-22  Gpnmb      0    0    0      0                    0 #>   mer8.mm0_indelTRUE mer6.mm0_indelTRUE mer7A1.mm0_indelTRUE #> 1                  1                  1                    1 #> 2                  0                  0                    0 #> 3                  0                  1                    0 #> 4                  0                  0                    0 #> 5                  0                  0                    0 #> 6                  0                  0                    0 #>   mer7m8.mm1_indelTRUE mer8.mm1_indelTRUE mer6.mm1_indelTRUE #> 1                    1                  1                  2 #> 2                   11                  3                 29 #> 3                    3                  2                 12 #> 4                    0                  0                  6 #> 5                    1                  1                  1 #> 6                    1                  0                  7 #>   mer7A1.mm1_indelTRUE mer7m8.mm0_indelFALSE mer8.mm0_indelFALSE #> 1                    1                     1                   1 #> 2                    7                     0                   0 #> 3                    6                     1                   0 #> 4                    4                     0                   0 #> 5                    1                     0                   0 #> 6                    1                     0                   0 #>   mer6.mm0_indelFALSE mer7A1.mm0_indelFALSE mer7m8.mm1_indelFALSE #> 1                   1                     1                     1 #> 2                   0                     0                     6 #> 3                   1                     0                     3 #> 4                   0                     0                     0 #> 5                   0                     0                     1 #> 6                   0                     0                     1 #>   mer8.mm1_indelFALSE mer6.mm1_indelFALSE mer7A1.mm1_indelFALSE #> 1                   1                   1                     1 #> 2                   3                  18                     6 #> 3                   2                  12                     6 #> 4                   0                   2                     1 #> 5                   1                   1                     1 #> 6                   0                   6                     0"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"return-as-data-frame","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Returning match positions","what":"Return as data frame","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"","code":"match.df = SeedMatchR(seqs = annodb$seqs,                        sequence = guide.seq,                        seed.name = \"mer7m8\",                        res.format = \"data.frame\")  head(match.df) #>             seqnames start  end width #> 1 ENSRNOG00000000091  2427 2433     7 #> 2 ENSRNOG00000000170  3031 3037     7 #> 3 ENSRNOG00000000299   217  223     7 #> 4 ENSRNOG00000000415  1198 1204     7 #> 5 ENSRNOG00000000543   659  665     7 #> 6 ENSRNOG00000000569   777  783     7"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"return-as-granges","dir":"Articles","previous_headings":"Quick start example with public siRNA data > Returning match positions","what":"Return as GRanges","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"","code":"match.df = SeedMatchR(seqs = annodb$seqs,                        sequence = guide.seq,                        seed.name = \"mer7m8\",                        res.format = \"granges\")  head(match.df) #> GRanges object with 6 ranges and 0 metadata columns: #>                 seqnames    ranges strand #>                    <Rle> <IRanges>  <Rle> #>   [1] ENSRNOG00000000091 2427-2433      * #>   [2] ENSRNOG00000000170 3031-3037      * #>   [3] ENSRNOG00000000299   217-223      * #>   [4] ENSRNOG00000000415 1198-1204      * #>   [5] ENSRNOG00000000543   659-665      * #>   [6] ENSRNOG00000000569   777-783      * #>   ------- #>   seqinfo: 541 sequences from an unspecified genome; no seqlengths"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"scan-all-sequences-for-all-match-types","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Scan all sequences for all match types","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"","code":"match.df = full_search(guide.seq = guide.seq,                         seqs = annodb$seqs,                         \"Ttr\")  head(match.df) #>                 seqs Full.mm0 Full.mm1 Full.mm2 Full.mm3 Full.mm4 18mer.mm0 #> 1 ENSRNOG00000000007        0        0        0        0        0         0 #> 2 ENSRNOG00000000008        0        0        0        0        0         0 #> 3 ENSRNOG00000000009        0        0        0        0        0         0 #> 4 ENSRNOG00000000010        0        0        0        0        0         0 #> 5 ENSRNOG00000000012        0        0        0        0        0         0 #> 6 ENSRNOG00000000017        0        0        0        0        0         0 #>   18mer.mm1 18mer.mm2 18mer.mm3 18mer.mm4 15mer.mm0 15mer.mm1 15mer.mm2 #> 1         0         0         0         0         0         0         0 #> 2         0         0         0         0         0         0         0 #> 3         0         0         0         0         0         0         0 #> 4         0         0         0         0         0         0         0 #> 5         0         0         0         0         0         0         0 #> 6         0         0         0         0         0         0         0 #>   15mer.mm3 15mer.mm4 mer8.mm0 mer8.mm1 mer7m8.mm0 mer7m8.mm1 mer7A1.mm0 #> 1         0         0        0        0          0          2          0 #> 2         0         0        0        0          0          0          0 #> 3         0         0        0        0          0          0          0 #> 4         1         1        0        1          0          1          0 #> 5         0         0        0        0          0          0          0 #> 6         0         0        0        0          0          0          0 #>   mer7A1.mm1 mer6.mm0 mer6.mm1 Group best.match #> 1          0        0       16   Ttr No.matches #> 2          0        0        0   Ttr No.matches #> 3          0        0        3   Ttr No.matches #> 4          1        0        2   Ttr   15mer-D3 #> 5          0        0        0   Ttr No.matches #> 6          0        0        1   Ttr No.matches"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"create-a-seedmatchreport","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Create a SeedMatchReport","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"","code":"report = SeedMatchReport(res = res,                           seqs = annodb$seqs,                           group.name = \"Ttr\",                           guide.seq = guide.seq)  report$table"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR.html","id":"comparing-the-expression-profiles-of-seed-targets-to-background","dir":"Articles","previous_headings":"Quick start example with public siRNA data","what":"Comparing the expression profiles of seed targets to background","title":"Find Matches to siRNA in Genomic Features with SeedMatchR","text":"Many factors perturb gene expression, like miRNA, show cumulative changes targets gene expression. Cumulative changes profile genes expression can visualized tested emperical distribution function (ecdf) coupled statistical test Kolmogorov-Smirnov test. SeedMatchR provides functions comparing log2(Fold Change) two gene sets. function deseq_fc_ecdf designed work directly DESeq2 results data frame. Required Inputs: res: DESEQ2 results data.frame gene.lists: list lists containing gene names","code":"# Gene set 1  mer7m8.list = res$gene_id[res$mer7m8 >= 1 & res$mer8 ==0]  # Gene set 2  mer8.list = res$gene_id[res$mer8 >= 1]  background.list = res$gene_id[res$mer7m8 == 0 & res$mer8 == 0]  ecdf.results = deseq_fc_ecdf(res,                               title = \"ECDF of log2(FC)\",                              list(\"Background\" = background.list,                                    \"mer8\" = mer8.list, \"mer7m8\" = mer7m8.list),                              stats_test = \"KS\",                               factor_order = c(\"Background\", \"mer8\", \"mer7m8\"),                               null_name = \"Background\",                              target_name = \"mer8\",                               alternative = \"greater\",                              height = 5,                              width = 5)  ecdf.results$plot sessionInfo()  #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] ensembldb_2.32.0        AnnotationFilter_1.32.0 rtracklayer_1.68.0      #>  [4] GenomicFeatures_1.60.0  AnnotationDbi_1.70.0    Biobase_2.68.0          #>  [7] GenomicRanges_1.60.0    GenomeInfoDb_1.44.0     IRanges_2.42.0          #> [10] S4Vectors_0.46.0        BiocGenerics_0.54.0     generics_0.1.4          #> [13] SeedMatchR_2.0.0        #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1            farver_2.1.2                #>  [3] dplyr_1.1.4                 blob_1.2.4                  #>  [5] filelock_1.0.3              Biostrings_2.76.0           #>  [7] bitops_1.0-9                fastmap_1.2.0               #>  [9] RCurl_1.98-1.17             lazyeval_0.2.2              #> [11] BiocFileCache_2.16.0        GenomicAlignments_1.44.0    #> [13] XML_3.99-0.18               digest_0.6.37               #> [15] mime_0.13                   lifecycle_1.0.4             #> [17] ProtGenerics_1.40.0         KEGGREST_1.48.1             #> [19] RSQLite_2.4.1               magrittr_2.0.3              #> [21] compiler_4.5.1              rlang_1.1.6                 #> [23] sass_0.4.10                 tools_4.5.1                 #> [25] gt_1.0.0                    yaml_2.3.10                 #> [27] knitr_1.50                  labeling_0.4.3              #> [29] S4Arrays_1.8.1              htmlwidgets_1.6.4           #> [31] bit_4.6.0                   curl_6.4.0                  #> [33] DelayedArray_0.34.1         RColorBrewer_1.1-3          #> [35] xml2_1.3.8                  abind_1.4-8                 #> [37] BiocParallel_1.42.1         withr_3.0.2                 #> [39] purrr_1.1.0                 desc_1.4.3                  #> [41] grid_4.5.1                  ggplot2_3.5.2               #> [43] scales_1.4.0                SummarizedExperiment_1.38.1 #> [45] cli_3.6.5                   rmarkdown_2.29              #> [47] crayon_1.5.3                ragg_1.4.0                  #> [49] httr_1.4.7                  rjson_0.2.23                #> [51] DBI_1.2.3                   cachem_1.1.0                #> [53] parallel_4.5.1              BiocManager_1.30.26         #> [55] XVector_0.48.0              restfulr_0.0.16             #> [57] matrixStats_1.5.0           vctrs_0.6.5                 #> [59] Matrix_1.7-3                jsonlite_2.0.0              #> [61] bit64_4.6.0-1               systemfonts_1.2.3           #> [63] jquerylib_0.1.4             glue_1.8.0                  #> [65] pkgdown_2.1.3               codetools_0.2-20            #> [67] gtable_0.3.6                BiocVersion_3.21.1          #> [69] BiocIO_1.18.0               UCSC.utils_1.4.0            #> [71] tibble_3.3.0                pillar_1.11.0               #> [73] rappdirs_0.3.3              htmltools_0.5.8.1           #> [75] GenomeInfoDbData_1.2.14     R6_2.6.1                    #> [77] dbplyr_2.5.0                textshaping_1.0.1           #> [79] evaluate_1.0.4              lattice_0.22-7              #> [81] AnnotationHub_3.16.0        png_0.1-8                   #> [83] Rsamtools_2.24.0            memoise_2.0.1               #> [85] bslib_0.9.0                 SparseArray_1.8.0           #> [87] xfun_0.52                   fs_1.6.6                    #> [89] MatrixGenerics_1.20.0       pkgconfig_2.0.3"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview of SeedMatchR Annotation Databases","text":"entry covers annotations available 3 model species used SeedMatchR (human, mouse, rat). SeedMatchR requires information GTF gene > transcript annotations well sequences correspond features interest searched. can generated independently user can loaded SeedMatchR::load_annotations function. function load predefined annotations based species interest, filtering criteria, features interest. NOTES: order use rnor7, must R 4.3.0 greater installed. AnnotationHub ≥ 3.8.0 required. rnor6 mm10 used ensembldb::TxIsCanonicalFilter therefore canonical argument SeedMatchR::load_annotations must set FALSE. rnor6 rnor7 used ensembldb::TxSupportLevelFilter. Therefore value passed function SeedMatchR::load_annotations working rat transcriptome.","code":""},{"path":[]},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"load-data-for-rnor7","dir":"Articles","previous_headings":"Functions for working with annotations and building transcriptomes for queries","what":"Load data for Rnor7","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"annodb <- load_annotations(\"rnor7\", feature.type = \"exons\", protein.coding = FALSE, canonical = F, return_gene_name = F) #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: FALSE #> Filtering for transcripts with support level: FALSE #> Keep only the ENSEMBL canonical transcript: FALSE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE #> Loading annotations from AnnotationHub for rnor7 #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> require(\"rtracklayer\") #> Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by #> 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment' #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> require(\"ensembldb\") #> Extracting exons from ensembldb object. #> Extracting sequences for each feature. #> Keeping sequences that are >= 8"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"selecting-gtf","dir":"Articles","previous_headings":"How annotations were retrieved","what":"Selecting GTF","title":"Overview of SeedMatchR Annotation Databases","text":"GTF files selected full DNA sequence visible without type masking repeats. files names like Mus_musculus.GRCm39.109.gtf.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"selecting--2bit-dna-sequences","dir":"Articles","previous_headings":"How annotations were retrieved","what":"Selecting .2bit DNA sequences","title":"Overview of SeedMatchR Annotation Databases","text":".2bit files selected full DNA sequence visible without type masking repeats. files names like Homo_sapiens.GRCh38.dna.primary_assembly.2bit. Rat, file named dna.primary_assembly, instead choose dna_sm.primary_assembly soft-masked version genome accounts repeats.","code":""},{"path":[]},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"bit","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Hg38","what":".2bit","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"AnnotationHub::query(ah, c(\"GRCh38\", \"2bit\")) #> AnnotationHub with 120 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: Homo sapiens, homo sapiens #> # $rdataclass: TwoBitFile #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH49722\"]]'  #>  #>              title                                            #>   AH49722  | Homo_sapiens.GRCh38.cdna.all.2bit                #>   AH49723  | Homo_sapiens.GRCh38.dna.primary_assembly.2bit    #>   AH49724  | Homo_sapiens.GRCh38.dna_rm.primary_assembly.2bit #>   AH49725  | Homo_sapiens.GRCh38.dna_sm.primary_assembly.2bit #>   AH49726  | Homo_sapiens.GRCh38.ncrna.2bit                   #>   ...        ...                                              #>   AH106282 | Homo_sapiens.GRCh38.cdna.all.2bit                #>   AH106283 | Homo_sapiens.GRCh38.dna.primary_assembly.2bit    #>   AH106284 | Homo_sapiens.GRCh38.dna_rm.primary_assembly.2bit #>   AH106285 | Homo_sapiens.GRCh38.dna_sm.primary_assembly.2bit #>   AH106286 | Homo_sapiens.GRCh38.ncrna.2bit"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"version-110-for-grch38-p13","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Hg38 > ensembldb","what":"version 110 for GRCh38.p13","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"AnnotationHub::query(ah, c(\"GRCh38\", \"110\")) #> AnnotationHub with 1 record #> # snapshotDate(): 2025-04-08 #> # names(): AH113665 #> # $dataprovider: Ensembl #> # $species: Homo sapiens #> # $rdataclass: EnsDb #> # $rdatadateadded: 2023-04-25 #> # $title: Ensembl 110 EnsDb for Homo sapiens #> # $description: Gene and protein annotations for Homo sapiens based on Ensem... #> # $taxonomyid: 9606 #> # $genome: GRCh38 #> # $sourcetype: ensembl #> # $sourceurl: http://www.ensembl.org #> # $sourcesize: NA #> # $tags: c(\"110\", \"Annotation\", \"AnnotationHubSoftware\", \"Coverage\", #> #   \"DataImport\", \"EnsDb\", \"Ensembl\", \"Gene\", \"Protein\", \"Sequencing\", #> #   \"Transcript\")  #> # retrieve record with 'object[[\"AH113665\"]]'"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"version-80-for-grch38-p2","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Hg38 > ensembldb","what":"Version 80 for GRCh38.p2","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"AnnotationHub::query(ah, c(\"GRCh38\", \"80\")) #> AnnotationHub with 1 record #> # snapshotDate(): 2025-04-08 #> # names(): AH47066 #> # $dataprovider: Ensembl #> # $species: Homo sapiens #> # $rdataclass: GRanges #> # $rdatadateadded: 2015-05-22 #> # $title: Homo_sapiens.GRCh38.80.gtf #> # $description: Gene Annotation for Homo sapiens #> # $taxonomyid: 9606 #> # $genome: GRCh38 #> # $sourcetype: GTF #> # $sourceurl: ftp://ftp.ensembl.org/pub/release-80/gtf/homo_sapiens/Homo_sap... #> # $sourcesize: 44733199 #> # $tags: c(\"GTF\", \"ensembl\", \"Gene\", \"Transcript\", \"Annotation\")  #> # retrieve record with 'object[[\"AH47066\"]]'"},{"path":[]},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"rnor6","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Rat > .2bit","what":"Rnor6","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"Rnor\", \"release-104\")) #> AnnotationHub with 7 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: rattus norvegicus #> # $rdataclass: TwoBitFile, GRanges #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH92418\"]]'  #>  #>             title                                           #>   AH92418 | Rattus_norvegicus.Rnor_6.0.104.abinitio.gtf     #>   AH92419 | Rattus_norvegicus.Rnor_6.0.104.chr.gtf          #>   AH92420 | Rattus_norvegicus.Rnor_6.0.104.gtf              #>   AH93576 | Rattus_norvegicus.Rnor_6.0.cdna.all.2bit        #>   AH93577 | Rattus_norvegicus.Rnor_6.0.dna_rm.toplevel.2bit #>   AH93578 | Rattus_norvegicus.Rnor_6.0.dna_sm.toplevel.2bit #>   AH93579 | Rattus_norvegicus.Rnor_6.0.ncrna.2bit"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"rnor7","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Rat > .2bit","what":"Rnor7","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"Rattus\", \".2bit\")) #> AnnotationHub with 106 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl, UCSC #> # $species: Rattus norvegicus, rattus norvegicus #> # $rdataclass: TwoBitFile #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH14021\"]]'  #>  #>              title                                            #>   AH14021  | rn6.2bit                                         #>   AH14022  | rn5.2bit                                         #>   AH14023  | rn4.2bit                                         #>   AH49867  | Rattus_norvegicus.Rnor_6.0.cdna.all.2bit         #>   AH49868  | Rattus_norvegicus.Rnor_6.0.dna_rm.toplevel.2bit  #>   ...        ...                                              #>   AH104348 | Rattus_norvegicus.mRatBN7.2.ncrna.2bit           #>   AH106784 | Rattus_norvegicus.mRatBN7.2.cdna.all.2bit        #>   AH106785 | Rattus_norvegicus.mRatBN7.2.dna_rm.toplevel.2bit #>   AH106786 | Rattus_norvegicus.mRatBN7.2.dna_sm.toplevel.2bit #>   AH106787 | Rattus_norvegicus.mRatBN7.2.ncrna.2bit"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"rnor6-1","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Rat > ensembldb","what":"Rnor6","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"rat\", 104, \"ensdb\")) #> AnnotationHub with 6 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: Sparus aurata, Rattus norvegicus, Mesocricetus auratus, Kryptole... #> # $rdataclass: EnsDb #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH95677\"]]'  #>  #>             title                                         #>   AH95677 | Ensembl 104 EnsDb for Carassius auratus       #>   AH95725 | Ensembl 104 EnsDb for Echeneis naucrates      #>   AH95749 | Ensembl 104 EnsDb for Kryptolebias marmoratus #>   AH95762 | Ensembl 104 EnsDb for Mesocricetus auratus    #>   AH95846 | Ensembl 104 EnsDb for Rattus norvegicus       #>   AH95850 | Ensembl 104 EnsDb for Sparus aurata"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"rnor7-1","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Rat > ensembldb","what":"Rnor7","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"rat\", 109, \"ensdb\")) #> AnnotationHub with 6 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: Sparus aurata, Rattus norvegicus, Mesocricetus auratus, Kryptole... #> # $rdataclass: EnsDb #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH109518\"]]'  #>  #>              title                                         #>   AH109518 | Ensembl 109 EnsDb for Carassius auratus       #>   AH109583 | Ensembl 109 EnsDb for Echeneis naucrates      #>   AH109611 | Ensembl 109 EnsDb for Kryptolebias marmoratus #>   AH109625 | Ensembl 109 EnsDb for Mesocricetus auratus    #>   AH109732 | Ensembl 109 EnsDb for Rattus norvegicus       #>   AH109736 | Ensembl 109 EnsDb for Sparus aurata"},{"path":[]},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"mm39-or-gcrm39","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Mouse > .2bit","what":"mm39 or GCRm39","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"GRCm39\", \".2bit\")) #> AnnotationHub with 25 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: mus musculus #> # $rdataclass: TwoBitFile #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH90962\"]]'  #>  #>              title                                            #>   AH90962  | Mus_musculus.GRCm39.cdna.all.2bit                #>   AH90963  | Mus_musculus.GRCm39.dna.primary_assembly.2bit    #>   AH90964  | Mus_musculus.GRCm39.dna_rm.primary_assembly.2bit #>   AH90965  | Mus_musculus.GRCm39.dna_sm.primary_assembly.2bit #>   AH90966  | Mus_musculus.GRCm39.ncrna.2bit                   #>   ...        ...                                              #>   AH106439 | Mus_musculus.GRCm39.cdna.all.2bit                #>   AH106440 | Mus_musculus.GRCm39.dna.primary_assembly.2bit    #>   AH106441 | Mus_musculus.GRCm39.dna_rm.primary_assembly.2bit #>   AH106442 | Mus_musculus.GRCm39.dna_sm.primary_assembly.2bit #>   AH106443 | Mus_musculus.GRCm39.ncrna.2bit"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"mm10-or-grcm38","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Mouse > .2bit","what":"mm10 or GRCm38","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"GRCm38\", \".2bit\")) #> AnnotationHub with 95 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: Mus musculus, mus musculus #> # $rdataclass: TwoBitFile #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH49772\"]]'  #>  #>             title                                            #>   AH49772 | Mus_musculus.GRCm38.cdna.all.2bit                #>   AH49773 | Mus_musculus.GRCm38.dna.primary_assembly.2bit    #>   AH49774 | Mus_musculus.GRCm38.dna_rm.primary_assembly.2bit #>   AH49775 | Mus_musculus.GRCm38.dna_sm.primary_assembly.2bit #>   AH49776 | Mus_musculus.GRCm38.ncrna.2bit                   #>   ...       ...                                              #>   AH88474 | Mus_musculus.GRCm38.cdna.all.2bit                #>   AH88475 | Mus_musculus.GRCm38.dna.primary_assembly.2bit    #>   AH88476 | Mus_musculus.GRCm38.dna_rm.primary_assembly.2bit #>   AH88477 | Mus_musculus.GRCm38.dna_sm.primary_assembly.2bit #>   AH88478 | Mus_musculus.GRCm38.ncrna.2bit"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"mm39-or-grcm39","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Mouse > ensembldb","what":"mm39 or GRCm39","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"mus\", 104, \"ensdb\")) #> AnnotationHub with 11 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: Ursus maritimus, Scophthalmus maximus, Prolemur simus, Periophth... #> # $rdataclass: EnsDb #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH95670\"]]'  #>  #>             title                                               #>   AH95670 | Ensembl 104 EnsDb for Balaenoptera musculus         #>   AH95763 | Ensembl 104 EnsDb for Mus caroli                    #>   AH95775 | Ensembl 104 EnsDb for Mus musculus                  #>   AH95778 | Ensembl 104 EnsDb for Mus pahari                    #>   AH95779 | Ensembl 104 EnsDb for Mus spicilegus                #>   ...       ...                                                 #>   AH95790 | Ensembl 104 EnsDb for Neogobius melanostomus        #>   AH95825 | Ensembl 104 EnsDb for Periophthalmus magnuspinnatus #>   AH95836 | Ensembl 104 EnsDb for Prolemur simus                #>   AH95861 | Ensembl 104 EnsDb for Scophthalmus maximus          #>   AH95879 | Ensembl 104 EnsDb for Ursus maritimus"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_Annotation_Databases.html","id":"mm10-or-grcm38-1","dir":"Articles","previous_headings":"Code for querying AnnotationHub for references > Mouse > ensembldb","what":"mm10 or GRCm38","title":"Overview of SeedMatchR Annotation Databases","text":"","code":"query(ah, c(\"mus\", 109, \"ensdb\")) #> AnnotationHub with 27 records #> # snapshotDate(): 2025-04-08 #> # $dataprovider: Ensembl #> # $species: Mus musculus, Ursus maritimus, Scophthalmus maximus, Prolemur si... #> # $rdataclass: EnsDb #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"AH109509\"]]'  #>  #>              title                                               #>   AH109509 | Ensembl 109 EnsDb for Balaenoptera musculus         #>   AH109626 | Ensembl 109 EnsDb for Mus caroli                    #>   AH109640 | Ensembl 109 EnsDb for Mus musculus                  #>   AH109641 | Ensembl 109 EnsDb for Mus musculus                  #>   AH109642 | Ensembl 109 EnsDb for Mus musculus                  #>   ...        ...                                                 #>   AH109671 | Ensembl 109 EnsDb for Neogobius melanostomus        #>   AH109709 | Ensembl 109 EnsDb for Periophthalmus magnuspinnatus #>   AH109721 | Ensembl 109 EnsDb for Prolemur simus                #>   AH109750 | Ensembl 109 EnsDb for Scophthalmus maximus          #>   AH109783 | Ensembl 109 EnsDb for Ursus maritimus sessionInfo()  #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] ensembldb_2.32.0        AnnotationFilter_1.32.0 GenomicFeatures_1.60.0  #>  [4] AnnotationDbi_1.70.0    Biobase_2.68.0          rtracklayer_1.68.0      #>  [7] GenomicRanges_1.60.0    GenomeInfoDb_1.44.0     IRanges_2.42.0          #> [10] S4Vectors_0.46.0        SeedMatchR_2.0.0        AnnotationHub_3.16.0    #> [13] BiocFileCache_2.16.0    dbplyr_2.5.0            BiocGenerics_0.54.0     #> [16] generics_0.1.4          #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1            dplyr_1.1.4                 #>  [3] blob_1.2.4                  filelock_1.0.3              #>  [5] Biostrings_2.76.0           bitops_1.0-9                #>  [7] fastmap_1.2.0               lazyeval_0.2.2              #>  [9] RCurl_1.98-1.17             GenomicAlignments_1.44.0    #> [11] XML_3.99-0.18               digest_0.6.37               #> [13] mime_0.13                   lifecycle_1.0.4             #> [15] ProtGenerics_1.40.0         KEGGREST_1.48.1             #> [17] RSQLite_2.4.1               magrittr_2.0.3              #> [19] compiler_4.5.1              rlang_1.1.6                 #> [21] sass_0.4.10                 tools_4.5.1                 #> [23] yaml_2.3.10                 knitr_1.50                  #> [25] S4Arrays_1.8.1              htmlwidgets_1.6.4           #> [27] bit_4.6.0                   curl_6.4.0                  #> [29] DelayedArray_0.34.1         abind_1.4-8                 #> [31] BiocParallel_1.42.1         withr_3.0.2                 #> [33] purrr_1.1.0                 desc_1.4.3                  #> [35] grid_4.5.1                  SummarizedExperiment_1.38.1 #> [37] cli_3.6.5                   rmarkdown_2.29              #> [39] crayon_1.5.3                ragg_1.4.0                  #> [41] httr_1.4.7                  rjson_0.2.23                #> [43] DBI_1.2.3                   cachem_1.1.0                #> [45] parallel_4.5.1              BiocManager_1.30.26         #> [47] XVector_0.48.0              restfulr_0.0.16             #> [49] matrixStats_1.5.0           vctrs_0.6.5                 #> [51] Matrix_1.7-3                jsonlite_2.0.0              #> [53] bit64_4.6.0-1               systemfonts_1.2.3           #> [55] jquerylib_0.1.4             glue_1.8.0                  #> [57] pkgdown_2.1.3               codetools_0.2-20            #> [59] BiocVersion_3.21.1          BiocIO_1.18.0               #> [61] UCSC.utils_1.4.0            tibble_3.3.0                #> [63] pillar_1.11.0               rappdirs_0.3.3              #> [65] htmltools_0.5.8.1           GenomeInfoDbData_1.2.14     #> [67] R6_2.6.1                    textshaping_1.0.1           #> [69] lattice_0.22-7              evaluate_1.0.4              #> [71] png_0.1-8                   Rsamtools_2.24.0            #> [73] memoise_2.0.1               bslib_0.9.0                 #> [75] SparseArray_1.8.0           xfun_0.52                   #> [77] fs_1.6.6                    MatrixGenerics_1.20.0       #> [79] pkgconfig_2.0.3"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"examples-of-ecdf-statisics","dir":"Articles","previous_headings":"","what":"Examples of ECDF statisics","title":"SeedMatchR ECDF Statistics","text":"variety approaches can used calculate difference two distributions. Historically KS Dstat used miRNA related studies, also explored statistics Wasserstein. differences outlined TwoSamples package.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"example-workflow","dir":"Articles","previous_headings":"Examples of ECDF statisics","what":"Example workflow","title":"SeedMatchR ECDF Statistics","text":"","code":"# siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"load-example-deseq2-data","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"Load example DESeq2 data","title":"SeedMatchR ECDF Statistics","text":"","code":"get_example_data(\"sirna\") #> Example data directory being created at: /home/runner/.local/share/R/SeedMatchR  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  res = filter_res(res)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"load-annotations","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"Load Annotations","title":"SeedMatchR ECDF Statistics","text":"next load annotations rat. step described vignette.","code":"# Load the species specific annotation database object annodb = load_annotations(reference.name = \"rnor6\", canonical = FALSE, min.feature.width = 8, longest.utr = T)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"search-features-for-seed-matches","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"Search features for seed matches","title":"SeedMatchR ECDF Statistics","text":"","code":"res = SeedMatchR(res = res,                   seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\")  head(res, 2) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #>            padj symbol mer7m8 #> 1 3.405371e-119    Ttr      1 #> 2  1.358683e-32  Kpna6      0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"extract-gene-matches-for-each-criteria-and-their-fold-changes","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"Extract gene matches for each criteria and their fold changes","title":"SeedMatchR ECDF Statistics","text":"","code":"# Gene set 1  mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[res$mer7m8 == 0]  # Gene set 1 FC mer7m8.FC = res$log2FoldChange[res$mer7m8 >= 1]  # Gene set 2 FC background.FC = res$log2FoldChange[res$mer7m8 == 0]"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"ks-statistic","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"KS statistic","title":"SeedMatchR ECDF Statistics","text":"","code":"ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list),                               stats_test = \"KS\")  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"wasserstein-statistic","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"Wasserstein statistic","title":"SeedMatchR ECDF Statistics","text":"","code":"ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list),                               stats_test = \"Wass\")  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"dts","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"DTS","title":"SeedMatchR ECDF Statistics","text":"","code":"ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list),                               stats_test = \"DTS\"                              ) #> Warning in scored$statistic <- scored[[1]]: Coercing LHS to a list  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_ECDF_statistics.html","id":"wilcoxen-statistic","dir":"Articles","previous_headings":"Examples of ECDF statisics > Example workflow","what":"Wilcoxen statistic","title":"SeedMatchR ECDF Statistics","text":"","code":"ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list),                               stats_test = \"Wilcoxen\")  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_OutputFormats.html","id":"load-annotation-databases","dir":"Articles","previous_headings":"","what":"Load annotation databases","title":"SeedMatchR output formats","text":"","code":"annodb = load_annotations(reference.name = \"rnor6\", canonical = FALSE, min.feature.width = 8, longest.utr = T)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_OutputFormats.html","id":"prepare-deseq2-results","dir":"Articles","previous_headings":"","what":"Prepare DESEQ2 Results","title":"SeedMatchR output formats","text":"DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res. DESeq2 results file filtered. function filter_res() can used filter results file log2FoldChange, padj, baseMean, remove NA entries.","code":"get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  res = filter_res(res, fdr_cutoff=1, fc_cutoff=0)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_OutputFormats.html","id":"deseq2-column-output","dir":"Articles","previous_headings":"","what":"DESeq2 column output","title":"SeedMatchR output formats","text":"","code":"res.de = SeedMatchR(res = res,                   seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\")  head(res.de)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_OutputFormats.html","id":"data-frame-output","dir":"Articles","previous_headings":"","what":"Data frame output","title":"SeedMatchR output formats","text":"can perform seed match single seed using SeedMatchR() function.","code":"res.df = SeedMatchR(seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\",                   res.format = \"data.frame\")  head(res.df)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_OutputFormats.html","id":"granges-output","dir":"Articles","previous_headings":"","what":"GRanges output","title":"SeedMatchR output formats","text":"can perform seed match single seed using SeedMatchR() function.","code":"res.gr = SeedMatchR(seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\",                   res.format = \"granges\")  head(res.gr)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_OutputFormats.html","id":"iranges-output","dir":"Articles","previous_headings":"","what":"IRanges output","title":"SeedMatchR output formats","text":"can perform seed match single seed using SeedMatchR() function.","code":"res.ir = SeedMatchR(res = res,                   seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\",                   res.format = \"iranges\")  head(res.ir)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_build_PPI_network.html","id":"trrust-network-based-analysis","dir":"Articles","previous_headings":"","what":"TRRUST-network based analysis","title":"SeedmatchR build PPI networks","text":", try tackle problem indirect -target indirect -target effects siRNA (given sequence) using experimentally validated TRRUST network isolate genes regulated transcription factors turn affected siRNA introduction. get_network_matches function designed calculate network matches given graph gene list using transcription network aggregation method. begins loading internal transcription network data R data file creating graph data using igraph package.(https://ngdc.cncb.ac.cn/databasecommons/database/id/5213#:~:text=TRRUST%3A%20a%20reference%20database%20of%20human%20transcriptional%20regulatory,%28%29%20%7C%20190%20Citations%20%28from%20Europe%20PMC%2C%202024-08-31%29)","code":"genes_with_seedmatches = res$gene_id[res$mer7m8 > 0]  network_matches = get_network_matches(genes_with_seedmatches, aggregator = 'mean')  head(network_matches)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"can install development version SeedMatchR GitHub stable build CRAN.","code":"library(SeedMatchR)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load example data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication: guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno A, LeBlanc S, Liebow A, Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. From bench to bedside: Improving the clinical safety of GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600. # siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"download-data-only-need-to-perform-once-can-skip-to-loading-if-done","dir":"Articles","previous_headings":"Load example data","what":"Download data (only need to perform once, can skip to loading if done)","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"start downloading example data set. function download three files GEO accession GSE184929. files represent three samples different siRNA treatments two dosages.","code":"get_example_data(\"sirna\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-example-data-1","dir":"Articles","previous_headings":"Load example data","what":"Load example data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"can load example data environment. DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res.","code":"sirna.data = load_example_data(\"sirna\") res <- sirna.data$Schlegel_2022_Ttr_D1_10mkg  # Filter DESeq2 results for SeedMatchR res = filter_deseq(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = T)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-annotations","dir":"Articles","previous_headings":"","what":"Load Annotations","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"next load annotations rat. step described vignette.","code":"# Load the species specific annotation database object anno.db <- load_species_anno_db(\"rat\")  # Load the specific features and sequences of interest features = get_feature_seqs(anno.db$tx.db, anno.db$dna, feature.type = \"3UTR\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"search-features-for-seed-matches","dir":"Articles","previous_headings":"","what":"Search features for seed matches","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"","code":"res = SeedMatchR(res, anno.db$gtf, features$seqs, guide.seq, \"mer7m8\")  head(res)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"preparing-mirdb-for-use-with-seedmatchr","dir":"Articles","previous_headings":"","what":"Preparing miRDB for use with SeedMatchR","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"miRDB database used identify mRNA predicted targets miRNA. download latest version miRDB website modify data include information gene symbol, ENTREZ ID, ENSEMBL ID. use org.Rn.eg.db data package access species specific annotation information ENSEMBL.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"download-mirdb-only-needs-to-be-performed-once-can-skip-to-loading-if-done","dir":"Articles","previous_headings":"Preparing miRDB for use with SeedMatchR","what":"Download miRDB (only needs to be performed once, can skip to loading if done)","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"","code":"get_example_data(\"mirna\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"load-mirdb-into-the-environment","dir":"Articles","previous_headings":"Preparing miRDB for use with SeedMatchR","what":"Load miRDB into the environment","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"","code":"mirdb = load_example_data(\"mirna\")  mirdb.rat = mirdb[mirdb$species == \"rno\",]  head(mirdb.rat)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"map-ensembl-names","dir":"Articles","previous_headings":"Preparing miRDB for use with SeedMatchR","what":"Map ENSEMBL names","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"Since names target genes REFSEQ format, use R package org.Rn.eg.db help map REFSEQ IDs ENSEMBL IDs.","code":"library(org.Rn.eg.db) library(dplyr)  # Create the annotation database based on refseq, ensembl, and gene symbol annotations mir.targets = AnnotationDbi::select(org.Rn.eg.db,                                       keys = mirdb.rat[,2],                                       keytype =\"REFSEQ\",                                       columns=c(\"ENSEMBL\", \"SYMBOL\", \"ENTREZID\"),                                       multiVals=\"list\")    # Find the IDs as as ENSEMBL IDs and return as a list mir.targ.ens <- mir.targets %>%     group_by(REFSEQ) %>%     summarise(ENSEMBL_ID = toString(unique(ENSEMBL)))  # Match the IDs for ENSEMBL ref2ens <- mir.targ.ens$ENSEMBL_ID[match(mirdb.rat$target.REFSEQ.ID,                                            mir.targ.ens$REFSEQ)]  # Bind the new columns mirdb.rat = cbind(mirdb.rat, ref2ens)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"finding-mirna-target-genes-based-on-mirna-expression-data","dir":"Articles","previous_headings":"","what":"Finding miRNA target genes based on miRNA expression data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"smallRNAseq expression data, can use decide miRNA potentially expressed system. , can follow approach identify public small RNAseq experiments generate list top expressed microRNA.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"public-rat-liver-small-rna-expression-data","dir":"Articles","previous_headings":"Finding miRNA target genes based on miRNA expression data","what":"Public rat liver small RNA expression data","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"example looking miRNA expression data 6 week old female rat liver baseline conditions. data collected GEO accession GSE172269. four replicates GSM5251324, GSM5251325, GSM5251326, GSM5251327. case, work normalized counts data. take average across replicates group find average miRNA expression. sort list highest expressed miRNA. can choose cutoff based expression, rank, combination two. data provided data object called GSE172269_F_Lvr_6wks_miRNA.","code":"top_10 = c(\"rno-miR-192-5p\", \"rno-miR-22-3p\", \"rno-miR-148a-3p\", \"rno-miR-10a-5p\", \"rno-miR-26a-5p\", \"rno-miR-21-5p\", \"rno-miR-143-3p\", \"rno-miR-27b-3p\", \"rno-miR-191a-5p\", \"rno-miR-122-5p\")  # subset the database according to the miRNA of interest and the target score mir.targets.score90 = mirdb.rat$ref2ens[mirdb.rat[,\"miRDB.ID\"] %in% top_10 & mirdb.rat[,3]>= 90]  # Remove any NA values mir.targets.score90 = mir.targets.score90[!is.na(mir.targets.score90)]  # unlist the string list of names mir.targets.score90 = unique(unlist(lapply(mir.targets.score90,                                          stringr::str_split,                                          \", \")))"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_miRNA_analysis.html","id":"ecdf-for-log2foldchange-of-mirna-targets-compared-to-genes-with-seed-matches","dir":"Articles","previous_headings":"","what":"ECDF for log2(FoldChange) of miRNA targets compared to genes with seed matches","title":"Exploring perturbation of miRNA pathways by siRNA knockdown using SeedMatchR","text":"analysis compare genes mer7m8 seed match targets miRNA expression DESeq2 experiments. also third group compares shared gene targets siRNA miRNA.","code":"# Set of genes that are specific to mer7m8 seed matches mer7m8.list = res$gene_id[res$mer7m8 >= 1 & !(res$gene_id %in% mir.targets.score90)]  # Set of genes that are specific to seed and miRNA seed_and_mir = res$gene_id[res$mer7m8 >= 1 & res$gene_id %in% mir.targets.score90]  # Set of genes that is specific to miRNA only mir.targets = mir.targets.score90[!mir.targets.score90 %in% seed_and_mir]  # Generate the background list of genes background.list = res$gene_id[!(res$gene_id %in% mer7m8.list) & !(res$gene_id %in% mir.targets) & !(res$gene_id %in% seed_and_mir)]    ecdf.results = de_fc_ecdf(res,                               title = \"Ttr D1 30mkg\",                              list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list,                                    \"Top 10 miRNA\" = mir.targets,                                    \"Seed and miRNA\" = seed_and_mir),                              stats.test = \"KS\",                               factor.order = c(\"Background\",                                                \"mer7m8\",                                                \"Top 10 miRNA\",                                                \"Seed and miRNA\"),                               null.name = \"Background\",                              target.name = \"Top 10 miRNA\")  ecdf.results$plot sessionInfo()"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_noncanonical_searches.html","id":"running-with-wobbles-and-bulges","dir":"Articles","previous_headings":"","what":"Running with wobbles and bulges","title":"SeedMatchR_noncanonical_searches","text":"","code":"wobbles_bulges_matches = run_wobble_bulges_pipeline(guide.seq = guide.seq,                                                     res =res,features = annodb$seqs,                                                     bulges_lim = 1)    head(wobbles_bulges_matches)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_noncanonical_searches.html","id":"compensatory-non-canonical-matches","dir":"Articles","previous_headings":"","what":"3`-compensatory non-canonical matches","title":"SeedMatchR_noncanonical_searches","text":"get_compensatory_sequences function designed identify 3’ compensatory sequences given siRNA sequence. takes several parameters, including guide sequence (guide.seq), seed sequence (seed), set DNA sequences (sequences), various limits mismatch allowances. function returns data frame containing identified compensatory regions.","code":"comp_matches = get_compensatory_sequences(guide.seq = guide.seq,                                                 seed = get_seed(guide.seq, 'mer7m8')$Target.Seq,                                                 sequences = annodb$seqs,                                                 compensatory_region_length_min = 6,                                                 limit = 100)  head(comp_matches) comp.list = unique(comp_matches$TX_ID)  # Gene set 2 background.list = res$gene_id[!(res$gene_id %in% comp.list)]  ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"Compensetory Matches\" = comp.list))  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"SeedMatchR Search Details","text":"SeedMatchR uses Biostrings::matchPattern variants searching sequences. article describes different parameters search results.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load example data","title":"SeedMatchR Search Details","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication:","code":"Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno A, LeBlanc S, Liebow A, Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. From bench to bedside: Improving the clinical safety of GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600."},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"load-sequence-data","dir":"Articles","previous_headings":"Load example data","what":"Load sequence data","title":"SeedMatchR Search Details","text":"guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"# siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  # siRNA target sequence ttr.target = get_seed(guide.seq = guide.seq, seed.name = \"Full\")$Target.Seq  ttr.target.wobble = get_seed(guide.seq = guide.seq, seed.name = \"Full\", allow_wobbles = TRUE)$Target.Seq"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"load-annotation-databases","dir":"Articles","previous_headings":"Load example data","what":"Load annotation databases","title":"SeedMatchR Search Details","text":"","code":"annodb = load_annotations(reference.name = \"rnor6\", canonical = FALSE, min.feature.width = 8, longest.utr = T) #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: TRUE #> Filtering for transcripts with support level: FALSE #> Keep only the ENSEMBL canonical transcript: FALSE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE #> Loading annotations from AnnotationHub for rnor6 #> loading from cache #> require(\"rtracklayer\") #> Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by #> 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment' #> loading from cache #> require(\"ensembldb\") #> Extracting 3UTR from ensembldb object. #> Keeping the longest UTR per gene. #> Extracting sequences for each feature. #> Keeping sequences that are >= 8"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"load-example-transcript","dir":"Articles","previous_headings":"Load example data","what":"Load example transcript","title":"SeedMatchR Search Details","text":"use SeedMatchR load example transcript Ttr rats. sequence target siRNA used package.","code":"# Original target sequence ttr.base.target = DNAString(\"AAAACAGTGTTCTTGCTCTATAA\")  # Ttr + 1 insert @ 12 ttr.ins.target = DNAString(\"AAAACAGTGTTGCTTGCTCTATAA\")  # Ttr + 4 mm @ 12-15 + 1 deletion @ 21 + 1 insert @ 4 ttr.mm4.in.del.target = DNAString(\"AAATACAGTGTTGCCACTCTAAA\")"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"load-example-de-data","dir":"Articles","previous_headings":"Load example data","what":"Load example DE data","title":"SeedMatchR Search Details","text":"","code":"get_example_data(\"sirna\") #> Example data directory being created at: /home/runner/.local/share/R/SeedMatchR #> Warning in dir.create(data.path, recursive = TRUE): #> '/home/runner/.local/share/R/SeedMatchR' already exists  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  res = filter_res(res, fdr_cutoff=1, fc_cutoff=0)"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"base-ttr-example","dir":"Articles","previous_headings":"Search variants","what":"Base Ttr example","title":"SeedMatchR Search Details","text":"expect see single complete match","code":"matchPattern(ttr.target, ttr.base.target, max.mismatch = 0, with.indels = F) #> Views on a 23-letter DNAString subject #> subject: AAAACAGTGTTCTTGCTCTATAA #> views: #>       start end width #>   [1]     1  22    22 [AAAACAGTGTTCTTGCTCTATA]"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"ttr-with-insertion","dir":"Articles","previous_headings":"Search variants","what":"Ttr with insertion","title":"SeedMatchR Search Details","text":"expect match found without proper flags. expect search matches despite indel flag since max.mismatch argument 0. expect match since indels allowed, still allow mismatches. expect search find 1 match since max.mismatch set 1 indels allowed.","code":"matchPattern(ttr.target, ttr.ins.target, max.mismatch = 0, with.indels = F) #> Views on a 24-letter DNAString subject #> subject: AAAACAGTGTTGCTTGCTCTATAA #> views: NONE matchPattern(ttr.target, ttr.ins.target, max.mismatch = 0, with.indels = T) #> Views on a 24-letter DNAString subject #> subject: AAAACAGTGTTGCTTGCTCTATAA #> views: NONE matchPattern(ttr.target, ttr.ins.target, max.mismatch = 1, with.indels = F) #> Views on a 24-letter DNAString subject #> subject: AAAACAGTGTTGCTTGCTCTATAA #> views: NONE matchPattern(ttr.target, ttr.ins.target, max.mismatch = 1, with.indels = T) #> Views on a 24-letter DNAString subject #> subject: AAAACAGTGTTGCTTGCTCTATAA #> views: #>       start end width #>   [1]     1  23    23 [AAAACAGTGTTGCTTGCTCTATA]"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_search_details.html","id":"testing-multiple-mismatches-and-indels-and-how-they-are-reported","dir":"Articles","previous_headings":"","what":"Testing multiple mismatches and indels and how they are reported","title":"SeedMatchR Search Details","text":"total edit distance original sequence 6 (4 mismatches, 1 insertion, 1 deletion). want see different parameters counted max.mismatch category indels. expect matches. expect matches. expect matches. expect 1 match.","code":"matchPattern(ttr.target, ttr.mm4.in.del.target, max.mismatch = 4, with.indels = F) #> Views on a 23-letter DNAString subject #> subject: AAATACAGTGTTGCCACTCTAAA #> views: NONE matchPattern(ttr.target, ttr.mm4.in.del.target, max.mismatch = 4, with.indels = T) #> Views on a 23-letter DNAString subject #> subject: AAATACAGTGTTGCCACTCTAAA #> views: NONE matchPattern(ttr.target, ttr.mm4.in.del.target, max.mismatch = 6, with.indels = F) #> Views on a 23-letter DNAString subject #> subject: AAATACAGTGTTGCCACTCTAAA #> views: #>       start end width #>   [1]     2  23    22 [AATACAGTGTTGCCACTCTAAA] matchPattern(ttr.target, ttr.mm4.in.del.target, max.mismatch = 6, with.indels = T) #> Views on a 23-letter DNAString subject #> subject: AAATACAGTGTTGCCACTCTAAA #> views: #>       start end width #>   [1]     2  22    21 [AATACAGTGTTGCCACTCTAA] vcountPattern(ttr.target, DNAStringSet(ttr.mm4.in.del.target), max.mismatch = 6, with.indels = T) #> [1] 1"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_sequence_kmer_counts.html","id":"determine-transcript-library-k-mer-counts-with-biostrings","dir":"Articles","previous_headings":"","what":"Determine transcript library k-mer counts with Biostrings","title":"Transcript library k-mer counts with Biostrings","text":"article show determine transcriptome k-mer counts transcriptome interest.","code":""},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_sequence_kmer_counts.html","id":"load-annotations","dir":"Articles","previous_headings":"Determine transcript library k-mer counts with Biostrings > Find hg38 7-mer counts across canonical ENSEMBL transcripts","what":"Load annotations","title":"Transcript library k-mer counts with Biostrings","text":"","code":"annodb <- load_annotations(\"hg38\", feature.type = \"exons\") #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: TRUE #> Filtering for transcripts with support level: FALSE #> Keep only the ENSEMBL canonical transcript: TRUE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE #> Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by #> 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment' #> Loading annotations from AnnotationHub for hg38 #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> require(\"rtracklayer\") #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> require(\"ensembldb\") #> Extracting exons from ensembldb object. #> Extracting sequences for each feature. #> Keeping sequences that are >= 8"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_sequence_kmer_counts.html","id":"create-data-frame-for-mapping-tx_ix-to-gene_id","dir":"Articles","previous_headings":"Determine transcript library k-mer counts with Biostrings > Find hg38 7-mer counts across canonical ENSEMBL transcripts","what":"Create data frame for mapping tx_ix to gene_id","title":"Transcript library k-mer counts with Biostrings","text":"","code":"# Create a data frame to map tx_id to gene_id tx2gene <- mcols(transcripts(annodb$txdb, columns=c(\"tx_id\", \"gene_id\"))) #> Warning in valid.GenomicRanges.seqinfo(x, suggest.trim = TRUE): GRanges object contains 1 out-of-bound range located on sequence LRG_432. #>   Note that ranges located on a sequence whose length is unknown (NA) or on a #>   circular sequence are not considered out-of-bound (use seqlengths() and #>   isCircular() to get the lengths and circularity flags of the underlying #>   sequences). You can use trim() to trim these ranges. See #>   ?`trim,GenomicRanges-method` for more information. tx2gene$gene_id <- as.character(tx2gene$gene_id)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_sequence_kmer_counts.html","id":"get-counts-data","dir":"Articles","previous_headings":"Determine transcript library k-mer counts with Biostrings > Find hg38 7-mer counts across canonical ENSEMBL transcripts","what":"Get counts data","title":"Transcript library k-mer counts with Biostrings","text":"","code":"# only focus on ten sequences since the run can take a while during testing.  exon.counts = sequence_kmer_counts(annodb$seqs[1:10], tx2gene, width = 7)  exon.counts[1:3, 1:5] #>             tx_id gene_id AAAAAAA AAAAAAC AAAAAAG #> 1 ENSG00000004059    <NA>       0       0       0 #> 2 ENSG00000003056    <NA>       6       3       0 #> 3 ENSG00000173153    <NA>       1       0       0"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchR_sequence_kmer_counts.html","id":"convert-to-k-mer-summary-table","dir":"Articles","previous_headings":"Determine transcript library k-mer counts with Biostrings > Find hg38 7-mer counts across canonical ENSEMBL transcripts","what":"Convert to K-mer summary table","title":"Transcript library k-mer counts with Biostrings","text":"","code":"exon.binary = as.matrix(exon.counts[3:ncol(exon.counts)]) exon.binary[exon.binary > 0] <- 1  exon.gene.counts = colSums(exon.binary)  exons.df = data.frame(\"exon.counts\" = exon.gene.counts)  head(exons.df) #>         exon.counts #> AAAAAAA           5 #> AAAAAAC           3 #> AAAAAAG           4 #> AAAAAAT           4 #> AAAAACA           3 #> AAAAACC           3 hist(exon.gene.counts, breaks = 50, xlab = \"Number of genes with 7mer\", col = \"grey90\", main = NULL)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"generating-a-seedmatchreport","dir":"Articles","previous_headings":"","what":"Generating a SeedMatchReport","title":"Generate a SeedMatchReport for select sequence definitions","text":"SeedMatchReport analysis run pre-defined list sequence definitions siRNA scan annotations found DESEQ2 results file report basic statistics.","code":""},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"load-annotations","dir":"Articles","previous_headings":"Generating a SeedMatchReport > Example workflow","what":"Load annotations","title":"Generate a SeedMatchReport for select sequence definitions","text":"","code":"annodb = load_annotations(reference.name = \"rnor6\", canonical = FALSE, min.feature.width = 8, longest.utr = T) #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: TRUE #> Filtering for transcripts with support level: FALSE #> Keep only the ENSEMBL canonical transcript: FALSE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE #> Loading annotations from AnnotationHub for rnor6 #> loading from cache #> require(\"rtracklayer\") #> Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by #> 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment' #> loading from cache #> require(\"ensembldb\") #> Extracting 3UTR from ensembldb object. #> Keeping the longest UTR per gene. #> Extracting sequences for each feature. #> Keeping sequences that are >= 8"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"load-example-deseq2-data","dir":"Articles","previous_headings":"Generating a SeedMatchReport > Example workflow","what":"Load example DESeq2 data","title":"Generate a SeedMatchReport for select sequence definitions","text":"","code":"get_example_data(\"sirna\") #> Example data directory being created at: /home/runner/.local/share/R/SeedMatchR #> Warning in dir.create(data.path, recursive = TRUE): #> '/home/runner/.local/share/R/SeedMatchR' already exists  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  res = filter_res(res)"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"generate-report","dir":"Articles","previous_headings":"Generating a SeedMatchReport","what":"Generate report","title":"Generate a SeedMatchReport for select sequence definitions","text":"report can generated searches without indels. important think indels alter results analysis. edit distance (D) corresponds number indels mismatches allowed search. edit distance total mismatches + indels. Therefore, indel.bool flag set TRUE insertion deletion counts towards edit distance. edit distance 4 4 mismatches 3 mismatches + 1 indel combination indel + mismatches.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"generate-report-without-indels","dir":"Articles","previous_headings":"Generating a SeedMatchReport > Generate report","what":"Generate report without indels","title":"Generate a SeedMatchReport for select sequence definitions","text":"","code":"default.report = SeedMatchReport(res = res, seqs = annodb$seqs, guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\", indel.bool = FALSE)  default.report$table"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"generate-report-with-indels","dir":"Articles","previous_headings":"Generating a SeedMatchReport > Generate report","what":"Generate report with indels","title":"Generate a SeedMatchReport for select sequence definitions","text":"","code":"indel.report = SeedMatchReport(res = res, seqs = annodb$seqs, guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\", indel.bool = TRUE)  indel.report$table"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"generate-report-with-wobbles","dir":"Articles","previous_headings":"Generating a SeedMatchReport > Generate report","what":"Generate report with wobbles","title":"Generate a SeedMatchReport for select sequence definitions","text":"","code":"wobble.report = SeedMatchReport(res = res, seqs = annodb$seqs, guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\", indel.bool = FALSE, allow_wobbles = TRUE)  wobble.report$table"},{"path":"https://tacazares.github.io/SeedMatchR/articles/SeedMatchReport.html","id":"generate-report-with-wobbles-and-with-indels","dir":"Articles","previous_headings":"Generating a SeedMatchReport > Generate report","what":"Generate report with wobbles and with indels","title":"Generate a SeedMatchReport for select sequence definitions","text":"","code":"indel.wobble.report = SeedMatchReport(res = res, seqs = annodb$seqs, guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\", indel.bool = TRUE, allow_wobbles = TRUE)  indel.wobble.report$table"},{"path":"https://tacazares.github.io/SeedMatchR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tareian Cazares. Author, maintainer. Gulcin Ozer. Author. Pradeep Varathan Pugalenthi. Author. Jibo Wang. Author. Rick Higgs. Author. Eli Lilly Company. Copyright holder.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cazares T, Ozer G, Varathan Pugalenthi P, Wang J, Higgs R (2025). SeedMatchR: Find siRNA Matches Genomic Features. R package version 2.0.0.","code":"@Manual{,   title = {SeedMatchR: Find siRNA Matches in Genomic Features},   author = {Tareian Cazares and Gulcin Ozer and Pradeep {Varathan Pugalenthi} and Jibo Wang and Rick Higgs},   year = {2025},   note = {R package version 2.0.0}, }"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"seedmatchr-version-200","dir":"","previous_headings":"","what":"Find siRNA Matches in Genomic Features","title":"Find siRNA Matches in Genomic Features","text":"goal SeedMatchR help users identify potential seed-mediated effects RNA-seq data. changes forked repository add biological target bulges wobbles search space.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Find siRNA Matches in Genomic Features","text":"version SeedMatchR requires R ≥ 4.3.0, recommended use latest version R avoid issues annotation retrieval newer genomes. can install development version SeedMatchR GitHub stable build CRAN.","code":"# Install from GitHub install.packages(\"devtools\")  # Public Repository devtools::install_github(\"tacazares/SeedMatchR\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"quick-start-examples-with-public-sirna-data","dir":"","previous_headings":"","what":"Quick start examples with public siRNA data","title":"Find siRNA Matches in Genomic Features","text":"example uses siRNA sequence, D1, targeting Ttr gene rat liver publication: Schlegel MK, Janas MM, Jiang Y, Barry JD, Davis W, Agarwal S, Berman D, Brown CR, Castoreno , LeBlanc S, Liebow , Mayo T, Milstein S, Nguyen T, Shulga-Morskaya S, Hyde S, Schofield S, Szeto J, Woods LB, Yilmaz VO, Manoharan M, Egli M, Charissé K, Sepp-Lorenzino L, Haslett P, Fitzgerald K, Jadhav V, Maier MA. bench bedside: Improving clinical safety GalNAc-siRNA conjugates using seed-pairing destabilization. Nucleic Acids Res. 2022 Jul 8;50(12):6656-6670. doi: 10.1093/nar/gkac539. PMID: 35736224; PMCID: PMC9262600. guide sequence interest 23 bp long oriented 5’ -> 3’.","code":"# siRNA sequence of interest targeting a 23 bp region of the Ttr gene guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"load-rat-specific-annotation-data","dir":"","previous_headings":"Quick start examples with public siRNA data","what":"Load rat specific annotation data.","title":"Find siRNA Matches in Genomic Features","text":"use AnnotationHub derive GTF DNA sequence files species interest. derived annotations, save Rdata object increase speed loading data sets. Running function take several minutes. Therefore might helpful save objects reload later plan use code repeated workflow.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"load-annotation-databases","dir":"","previous_headings":"Quick start examples with public siRNA data > Load rat specific annotation data.","what":"Load annotation databases","title":"Find siRNA Matches in Genomic Features","text":"","code":"annodb = load_annotations(reference.name = \"rnor6\", canonical = FALSE, min.feature.width = 8, longest.utr = T) #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: TRUE #> Filtering for transcripts with support level: FALSE #> Keep only the ENSEMBL canonical transcript: FALSE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE #> Loading annotations from AnnotationHub for rnor6 #> loading from cache #> require(\"rtracklayer\") #> loading from cache #> require(\"ensembldb\") #> Extracting 3UTR from ensembldb object. #> Keeping the longest UTR per gene. #> Extracting sequences for each feature. #> Keeping sequences that are >= 8"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"example-1-perform-a-comprehensive-transcriptome-search","dir":"","previous_headings":"","what":"Example 1: Perform a comprehensive transcriptome search","title":"Find siRNA Matches in Genomic Features","text":"straightforward way using SeedMatchR search reference set transcripts given input sequence.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"output-match-ranges-as-granges","dir":"","previous_headings":"Example 1: Perform a comprehensive transcriptome search","what":"Output match ranges as granges","title":"Find siRNA Matches in Genomic Features","text":"","code":"res.df = SeedMatchR(seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\",                   res.format = \"granges\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"output-match-ranges-for-many-different-types-of-views-of-the-sirna","dir":"","previous_headings":"Example 1: Perform a comprehensive transcriptome search","what":"Output match ranges for many different types of views of the siRNA","title":"Find siRNA Matches in Genomic Features","text":"","code":"res.df = full_search(guide.seq, annodb$seqs, group.name = \"Ttr\")"},{"path":[]},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"prepare-deseq2-results","dir":"","previous_headings":"Example 2: Analyze RNA-seq data with SeedMatchR","what":"Prepare DESEQ2 Results","title":"Find siRNA Matches in Genomic Features","text":"test data provided SeedMatchR derived 2022 publication Schlegel et al. data set represents DESeq2 analysis performed rat liver treated Ttr targeting siRNA. use example explore seed mediated activity. Notes: >SeedMatchR function look specific column input using res argument map seed matches differential expression data. input must contain columns gene_id, log2FoldChange, padj.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"download-data-only-need-to-perform-once-can-skip-to-loading-if-done","dir":"","previous_headings":"Example 2: Analyze RNA-seq data with SeedMatchR > Prepare DESEQ2 Results","what":"Download data (only need to perform once, can skip to loading if done)","title":"Find siRNA Matches in Genomic Features","text":"start downloading example data set. function download three files GEO accession GSE184929. files represent three samples different siRNA treatments two dosages.","code":"get_example_data(\"sirna\")"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"load-example-data","dir":"","previous_headings":"Example 2: Analyze RNA-seq data with SeedMatchR > Prepare DESEQ2 Results","what":"Load example data","title":"Find siRNA Matches in Genomic Features","text":"can load example data environment. DESeq2 results available names Schlegel_2022_Ttr_D1_30mkg, Schlegel_2022_Ttr_D4_30mkg Schlegel_2022_Ttr_D1_10mkg. data set name long, renamed res.","code":"sirna.data = load_example_data(\"sirna\") res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"filter-example-results","dir":"","previous_headings":"Example 2: Analyze RNA-seq data with SeedMatchR > Prepare DESEQ2 Results","what":"Filter example results","title":"Find siRNA Matches in Genomic Features","text":"DESeq2 results file filtered. function filter_res() can used filter results file log2FoldChange, padj, baseMean, remove NA entries.","code":"# Dimensions before filtering dim(res) # [1] 32883    8 #> [1] 32883     8  # Filter DESeq2 results for SeedMatchR res = filter_res(res, fdr_cutoff=1, fc_cutoff=0)  # Dimensions after filtering dim(res) # [1] 13582     8 #> [1] 8124    8"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"counting-seed-matches-in-transcripts","dir":"","previous_headings":"Example 2: Analyze RNA-seq data with SeedMatchR","what":"Counting seed matches in transcripts","title":"Find siRNA Matches in Genomic Features","text":"can perform seed match single seed using SeedMatchR() function. Notes: names sequences seqs determine need use tx.id.col argument. sequence names gene IDs, additional flags need set. sequence names transcripts, argument tx.id.col set TRUE. summarize transcript matches gene level using information gtf file.","code":"res = SeedMatchR(res = res,                   seqs = annodb$seqs,                   sequence = guide.seq,                   seed.name = \"mer7m8\")  head(res, 2) #>              gene_id  baseMean log2FoldChange     lfcSE      stat        pvalue #> 1 ENSRNOG00000016275 2138.0945      -8.164615        NA -23.61818 2.507268e-123 #> 2 ENSRNOG00000000127  437.6342      -1.346927 0.1068629 -12.60425  2.000712e-36 #>            padj symbol mer7m8 #> 1 3.405371e-119    Ttr      1 #> 2  1.358683e-32  Kpna6      0"},{"path":"https://tacazares.github.io/SeedMatchR/index.html","id":"comparing-the-expression-profiles-of-seed-targets-to-background","dir":"","previous_headings":"Example 2: Analyze RNA-seq data with SeedMatchR","what":"Comparing the expression profiles of seed targets to background","title":"Find siRNA Matches in Genomic Features","text":"Many factors perturb gene expression, like miRNA, show cumulative changes targets gene expression. Cumulative changes profile genes expression can visualized tested emperical distribution function (ecdf) coupled statistical test Kolmogorov-Smirnov test. SeedMatchR provides functions comparing log2(Fold Change) two gene sets. function deseq_fc_ecdf designed work directly DESeq2 results data frame. Required Inputs: res: DESeq2 results data frame gene.lists: list lists containing gene names","code":"# Gene set 1  mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[res$mer7m8 == 0]  ecdf.results = deseq_fc_ecdf(res,                               list(\"Background\" = background.list,                                    \"mer7m8\" = mer7m8.list))  ecdf.results$plot"},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SeedMatchR: Find siRNA Matches in Genomic Features — SeedMatchR-package","title":"SeedMatchR: Find siRNA Matches in Genomic Features — SeedMatchR-package","text":"-target siRNA silencing mRNA results binding fully complementary regions transcripts induce cleavage. -target siRNA gene knockdown can occur several modes, one seed-mediated mechanism mimicking miRNA gene regulation. Seed-mediated -target effects occur ~8 nucleotides 5’ end guide strand, called seed region, bind 3’ untranslated regions mRNA, causing reduced translation. Experiments using siRNA knockdown paired RNA-seq can used detect siRNA sequences potential -target effects driven seed region. 'SeedMatchR' provides tools exploring detecting potential seed-mediated -target effects siRNA RNA-seq experiments. 'SeedMatchR' designed extend current differential expression analysis tools, 'DESeq2', annotating results predicted seed matches. Using publicly available data, demonstrate ability 'SeedMatchR' detect cumulative changes differential gene expression attributed siRNA seed regions.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SeedMatchR: Find siRNA Matches in Genomic Features — SeedMatchR-package","text":"Maintainer: Tareian Cazares tareian.cazares@lilly.com (ORCID) Authors: Gulcin Ozer ozer_gulcin@lilly.com (ORCID) Pradeep Varathan Pugalenthi pradeepvarathan.pugalenthi@lilly.com Jibo Wang Rick Higgs contributors: Eli Lilly Company [copyright holder]","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":null,"dir":"Reference","previous_headings":"","what":"Find seed matches in genomic features — SeedMatchR","title":"Find seed matches in genomic features — SeedMatchR","text":"Find seed matches Biostrings::DNAStringSet object sequences. function use get.seed extract seed sequence guide sequence. two modes running SeedMatchR. different modes ares set res.format argument options DESEQ2 data.frame. DESEQ2 mode match input seed across rows Biostrings::DNAStringSet object using Biostrings::vcountPattern(). matches aggregated matched genes DESEQ2 results data.frame. Counts reported additional column seed count. default, mode run DESEQ2 results data.frame provided res argument. data.frame mode return data.frame interval ranges associated matches Biostrings::vmatchPattern(). default mode run DESEQ2 results provided.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find seed matches in genomic features — SeedMatchR","text":"","code":"SeedMatchR(   seqs,   sequence,   res = NULL,   res.format = c(\"DESEQ2\", \"data.frame\", \"granges\", \"iranges\"),   seed.name = \"mer7m8\",   col.name = NULL,   start.pos = NULL,   stop.pos = NULL,   match.df = NULL,   sirna.name = NULL,   shared_genes = TRUE,   allow_wobbles = FALSE,   get_seed = TRUE,   max.mismatch = 0,   with.indels = TRUE,   fixed = TRUE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find seed matches in genomic features — SeedMatchR","text":"seqs Biostrings::DNAStringSet object sequence information features. names sequences transcript names. sequence Biostrings::DNAString guide sequence oriented 5' > 3'. res optional DESEQ2 results data.frame. provided, additional column seed match count added data.frame. provided, SeedMatchR return interval ranges match input Biostrings::DNAStringSet. res.format Format returned results. Either 'data.frame', 'DESEQ2', 'iranges', 'granges' seed.name seed name reported data.frame column called seed col.name optional name column match counts. default seed.name set start.pos seed start position stop.pos seed stop position match.df Optional: matches df provided results current search added rbind. sirna.name Optional siRNA name. new column called sirna.name added data.frame shared_genes true, tx set reduced overlapping features sequences db DE data. allow_wobbles True, allow G:U wobbles replacing U Y. get_seed True, parse input character vector return get_seed object. max.mismatch Number allowed mismatches total edit distance .indels True, include indels fixed Require sequence symbol matches searching. FALSE using wobbles.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find seed matches in genomic features — SeedMatchR","text":"Either 'data.frame', 'DESEQ2', 'iranges', 'granges' object based res.format input","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find seed matches in genomic features — SeedMatchR","text":"","code":"if (FALSE) { # interactive() library(dplyr)  seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_annotations(\"rnor7\")  get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_res(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res = res, seqs = anno.db$seqs, sequence = guide.seq, seed.name = \"mer7m8\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate statistics based on sequence matches and DE data — SeedMatchReport","title":"Generate statistics based on sequence matches and DE data — SeedMatchReport","text":"Generate statistics based sequence matches DE data","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchReport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate statistics based on sequence matches and DE data — SeedMatchReport","text":"","code":"SeedMatchReport(   res,   seqs,   guide.seq,   group.name = \"SeedMatchReport\",   indel.bool = TRUE,   allow_wobbles = FALSE,   log2fc.cut = -0.7655347,   padj.cut = 0.05,   seed.edit.distances = 0,   fixed = T )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate statistics based on sequence matches and DE data — SeedMatchReport","text":"res data.frame DESeq2 results seqs Biostrings::DNAStringSet sequences search guide.seq Input RNA sequence character vector group.name group name use labeling rows indel.bool Boolean long format (TRUE, FALSE) whether include indels. allow_wobbles Whether allow G:U wobbles search. log2fc.cut Log2(FC) threshold considering gene -target. padj.cut Adjust p-value threshold seed.edit.distances integer value indicating allowed edit distance seed searches. fixed Whether IUPAC values need match ambiguous chracters.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchReport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate statistics based on sequence matches and DE data — SeedMatchReport","text":"list containing: report: data.frame results table: gt::gt table results matches: data.frame matches","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/SeedMatchReport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate statistics based on sequence matches and DE data — SeedMatchReport","text":"","code":"if (FALSE) { # interactive() #' guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_annotations(\"rnor7\")  # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_res(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  SeedMatchReport(res, anno.db$seqs, anno.db$gtf, guide.seq, \"si-Ttr\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/as_dataframe_mp_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"as_dataframe_mp_matches — as_dataframe_mp_matches","title":"as_dataframe_mp_matches — as_dataframe_mp_matches","text":"function converts graph's vertex attributes 'feature_rep' 'features_act' data frame.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/as_dataframe_mp_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_dataframe_mp_matches — as_dataframe_mp_matches","text":"","code":"as_dataframe_mp_matches(g)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/as_dataframe_mp_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_dataframe_mp_matches — as_dataframe_mp_matches","text":"g igraph object representing graph.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/as_dataframe_mp_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as_dataframe_mp_matches — as_dataframe_mp_matches","text":"data frame columns 'ENSG', 'repression_matches', 'activation_matches' containing vertex names respective feature values.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/benchmark_preds.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark seed match predictions — benchmark_preds","title":"Benchmark seed match predictions — benchmark_preds","text":"Benchmark seed match predictions","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/benchmark_preds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark seed match predictions — benchmark_preds","text":"","code":"benchmark_preds(res, preds_col = \"mer7m8\", padj = 0.15, l2fc = 0)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/benchmark_preds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark seed match predictions — benchmark_preds","text":"res data.frame DESeq2 results. preds_col Column name containing seed match counts. padj Adjusted p-value cutoff gold standard. l2fc Log2(fold change) cutoff gold standard.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/benchmark_preds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Benchmark seed match predictions — benchmark_preds","text":"Two figures: precision recall curve receiver operator curve","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/benchmark_preds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benchmark seed match predictions — benchmark_preds","text":"","code":"if (FALSE) { # interactive() benchmark_preds(res) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/build_annotation_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an AnnotationFilter::AnnotationFilter for selecting transcripts — build_annotation_filter","title":"Build an AnnotationFilter::AnnotationFilter for selecting transcripts — build_annotation_filter","text":"function helps create AnnotationFilter::AnnotationFilterList combine multiple standard filters based flags.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/build_annotation_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an AnnotationFilter::AnnotationFilter for selecting transcripts — build_annotation_filter","text":"","code":"build_annotation_filter(   standard.chroms = TRUE,   remove.na.rows = TRUE,   protein.coding = TRUE,   transcript.support = NULL,   canonical = FALSE,   gene_id = NULL,   tx_id = NULL,   symbol = NULL,   entrez_id = NULL,   add.filter = NULL )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/build_annotation_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an AnnotationFilter::AnnotationFilter for selecting transcripts — build_annotation_filter","text":"standard.chroms Keep standard chromosomes. Boolean. remove.na.rows Remove transcripts NA ID column. Boolean. protein.coding Keep protein coding genes. Boolean. transcript.support Filter transcript support level. Integer 1-4 canonical Keep ENSEMBL canonical transcript. Boolean. gene_id Keep specific ENSEMBL ID(s). Input vector tx_id Keep specific tx_id(s). Input vector symbol Keep specific gene symbol(s). Input vector entrez_id Keep specific ENTREZ ID(s). Input vector add.filter Optional AnnotationFilter::AnnotationFilterList include","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/build_annotation_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build an AnnotationFilter::AnnotationFilter for selecting transcripts — build_annotation_filter","text":"AnnotationFilter::AnnotationFilterList object","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/build_annotation_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build an AnnotationFilter::AnnotationFilter for selecting transcripts — build_annotation_filter","text":"","code":"# Default: standard chromosomes, removes na tx_ids, and keep protein coding afl = SeedMatchR::build_annotation_filter() #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: TRUE #> Filtering for transcripts with support level: FALSE #> Keep only the ENSEMBL canonical transcript: FALSE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE  # Keep only transcripts with support level 1 afl = SeedMatchR::build_annotation_filter(transcript.support = 1) #> Build AnnotationFilter for transcript features based on the following parameters:  #> Keep only standard chroms: TRUE #> Remove rows with NA in transcript ID: TRUE #> Keep only protein coding genes and transcripts: TRUE #> Filtering for transcripts with support level: 1 #> Keep only the ENSEMBL canonical transcript: FALSE #> Filtering for specific genes: FALSE #> Filtering for specific transcripts: FALSE #> Filtering for specific gene symbols: FALSE #> Filtering for specific entrez id: FALSE #> Warning: replacing previous import ‘S4Arrays::makeNindexFromArrayViewport’ by ‘DelayedArray::makeNindexFromArrayViewport’ when loading ‘SummarizedExperiment’"},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_bulges_nt.html","id":null,"dir":"Reference","previous_headings":"","what":"check_bulges_nt — check_bulges_nt","title":"check_bulges_nt — check_bulges_nt","text":"function checks sequences bulges filters based presence 'N' first nt positions.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_bulges_nt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_bulges_nt — check_bulges_nt","text":"","code":"check_bulges_nt(sequenceStringSet, nt = nt, return_allowed = TRUE)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_bulges_nt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check_bulges_nt — check_bulges_nt","text":"sequenceStringSet RNAStringSet object containing sequences checked. nt integer representing length start sequence bulges allowed. return_allowed boolean indicating whether return allowed sequences (TRUE) removed sequences (FALSE).","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_bulges_nt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check_bulges_nt — check_bulges_nt","text":"RNAStringSet object containing either allowed removed sequences based return_allowed parameter.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/check_bulges_nt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check_bulges_nt — check_bulges_nt","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/create_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graph of protein-protein interactions from stringDB — create_graph","title":"Create a graph of protein-protein interactions from stringDB — create_graph","text":"function creates graph object protein-protein interaction network result_output dataframe.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/create_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graph of protein-protein interactions from stringDB — create_graph","text":"","code":"create_graph(string_ppi, res)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/create_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graph of protein-protein interactions from stringDB — create_graph","text":"string_ppi protein-protein interaction network. res result_output data frame.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/create_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graph of protein-protein interactions from stringDB — create_graph","text":"graph object feature attribute.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the ECDF of log2(fold change) between groups — deseq_fc_ecdf","title":"Plot the ECDF of log2(fold change) between groups — deseq_fc_ecdf","text":"functions take differential expression results data.frame plot ECDF input gene_lists. gene sets plot provided named list vectors. Example: gene_lists = list(\"Background\" = c(\"gene1\", \"gene2\"), \"Target\" = c(\"gene2\", \"gene3\")) output saved PDF output_filename provided. Users can define groups compared statistical test using null_name target_name arguments. names must found gene_lists. factor_order used order groups analysis. functions returns: $plot: ECDF plot $stats: results object","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the ECDF of log2(fold change) between groups — deseq_fc_ecdf","text":"","code":"deseq_fc_ecdf(   res,   gene_lists,   title = \"ECDF\",   output_filename = NULL,   palette = SeedMatchR.palette,   factor_order = NULL,   x_lims = c(-1, 1),   stats_test = c(\"KS\", \"Wilcoxen\", \"Wass\", \"DTS\"),   alternative = c(\"greater\", \"less\", \"two.sided\"),   null_name = 1,   target_name = 2,   height = 5,   width = 5,   dpi = 320,   theme = SeedMatchR.theme )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the ECDF of log2(fold change) between groups — deseq_fc_ecdf","text":"res differential expression results data frame. gene_lists nested list gene names. Example: gene_lists = list(\"Background\" = background_list, \"Target\" = target_list) title tile plot. output_filename output filename provided, plot saved. palette Vector colors use curves. factor_order Vector defining order use legends. x_lims x-axis range limits. stats_test statistical test use. Options: KS, Wass, Wilcoxen, DTS. alternative alternative hypothesis test. Options: greater, less, two.sided. null_name name gene.list use null ECDF plots. target_name name gene.list use target ECDF. height Plot height inches. width Plot width inches. dpi DPI resolution figure. theme ggplot2 theme defining plot parameters.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the ECDF of log2(fold change) between groups — deseq_fc_ecdf","text":"ggplot object ECDF statistics.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/deseq_fc_ecdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the ECDF of log2(fold change) between groups — deseq_fc_ecdf","text":"","code":"if (FALSE) { # interactive() library(dplyr)  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_annotations(\"rnor7\")  # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_res(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res = res, gtf = anno.db$gtf, seqs = anno.db$seqs, sequence = guide.seq, seed.name = \"mer7m8\", tx.id.col= FALSE)  # Gene set 1 mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[res$mer7m8 == 0]  ecdf.results = deseq_fc_ecdf(res, list(\"Background\" = background.list, \"mer7m8\" = mer7m8.list)) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-check_gene_list_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if input gene lists overlap — .check_gene_list_overlap","title":"Check if input gene lists overlap — .check_gene_list_overlap","text":"Check input gene lists overlap","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-check_gene_list_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if input gene lists overlap — .check_gene_list_overlap","text":"","code":".check_gene_list_overlap(gene_lists)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-check_gene_list_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if input gene lists overlap — .check_gene_list_overlap","text":"gene_lists list gene lists. example: list(c(\"gene1\", \"gene2\"), c(\"gene1\"))","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-check_gene_list_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if input gene lists overlap — .check_gene_list_overlap","text":"Warning gene sets overlap.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-check_gene_list_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if input gene lists overlap — .check_gene_list_overlap","text":"","code":"# Overlap SeedMatchR:::.check_gene_list_overlap(list(c(\"gene1\", \"gene2\"), c(\"gene1\"))) #> Warning: Gene lists overlap!  #No overlap SeedMatchR::.check_gene_list_overlap(list(c(\"gene1\", \"gene2\"), c(\"gene3\")))"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-create_alignment_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataframe of alignment information — .create_alignment_df","title":"Create a dataframe of alignment information — .create_alignment_df","text":"Create dataframe alignment information","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-create_alignment_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataframe of alignment information — .create_alignment_df","text":"","code":".create_alignment_df(   sirna,   match.string,   feature.seq,   aln.name,   left.pad,   right.pad )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-create_alignment_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataframe of alignment information — .create_alignment_df","text":"sirna siRNA string character vector match.string match characters character vector feature.seq feature sequence character vector aln.name column name use DF left.pad amount left spaces add based upper-level arguments right.pad amount right spaces add based upper-level arguments","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-create_alignment_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataframe of alignment information — .create_alignment_df","text":"data.frame represents alignment siRNA feature sequence","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-find_factorial_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"find_factorial_internal — .find_factorial_internal","title":"find_factorial_internal — .find_factorial_internal","text":"function calculates sum combinations given number Uridines.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-find_factorial_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find_factorial_internal — .find_factorial_internal","text":"","code":".find_factorial_internal(num_U)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-find_factorial_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find_factorial_internal — .find_factorial_internal","text":"num_U integer representing number Uridines.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-find_factorial_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find_factorial_internal — .find_factorial_internal","text":"sum combinations integer.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-find_factorial_internal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"find_factorial_internal — .find_factorial_internal","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-gc_content.html","id":null,"dir":"Reference","previous_headings":"","what":".gc_content — .gc_content","title":".gc_content — .gc_content","text":"Function calculate GC content given DNA sequence.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-gc_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".gc_content — .gc_content","text":"","code":".gc_content(sequence)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-gc_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".gc_content — .gc_content","text":"sequence character string representing DNA sequence.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-gc_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".gc_content — .gc_content","text":"numeric value representing GC content percentage sequence.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_all_combination_w_b.html","id":null,"dir":"Reference","previous_headings":"","what":"get_all_combination_w_b — .get_all_combination_w_b","title":"get_all_combination_w_b — .get_all_combination_w_b","text":"function generates possible combinations guide sequences wobbles","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_all_combination_w_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_all_combination_w_b — .get_all_combination_w_b","text":"","code":".get_all_combination_w_b(guide.seq, silent = FALSE)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_all_combination_w_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_all_combination_w_b — .get_all_combination_w_b","text":"guide.seq guide sequence silent boolean suppress output","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_all_combination_w_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_all_combination_w_b — .get_all_combination_w_b","text":"list guide seed sequences","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_all_combination_w_b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_all_combination_w_b — .get_all_combination_w_b","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_canonical_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the target sequence for canonical seed definitions — .get_canonical_seed","title":"Get the target sequence for canonical seed definitions — .get_canonical_seed","text":"Get target sequence canonical seed definitions","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_canonical_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the target sequence for canonical seed definitions — .get_canonical_seed","text":"","code":".get_canonical_seed(   guide.seq,   seed.name = c(\"mer7m8\", \"Full\", \"18mer\", \"15mer\", \"mer8\", \"mer6\", \"mer7A1\"),   allow_wobbles = FALSE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_canonical_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the target sequence for canonical seed definitions — .get_canonical_seed","text":"guide.seq input RNA string character vector. Must least 8 characters long. seed.name name canonical seed definition return. Options: \"mer7m8\", \"mer8\", \"mer6\", \"mer7A1\", \"Full\", \"18-mer\", \"15-mer\" allow_wobbles true, positions G:U wobble considered.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_canonical_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the target sequence for canonical seed definitions — .get_canonical_seed","text":"DNAString canonical seed sequence search term.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_canonical_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the target sequence for canonical seed definitions — .get_canonical_seed","text":"","code":"guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  canonical.seed.seq = SeedMatchR:::.get_canonical_seed(guide.seq, seed.name = \"mer7m8\")"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_counts_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Get match results as a column of counts appended to a differential expression results data.frame — .get_counts_column","title":"Get match results as a column of counts appended to a differential expression results data.frame — .get_counts_column","text":"Get match results column counts appended differential expression results data.frame","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_counts_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get match results as a column of counts appended to a differential expression results data.frame — .get_counts_column","text":"","code":".get_counts_column(   res,   target.seq,   seqs,   seed.name,   col.name = NULL,   shared_genes = TRUE,   max.mismatch = 0,   with.indels = F,   fixed = F )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_counts_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get match results as a column of counts appended to a differential expression results data.frame — .get_counts_column","text":"res Input differential expression results data.frame target.seq Pattern search seqs seqs DNAStringSet search instances target.seq seed.name seed name reported data.frame column called seed col.name optional name column match counts. default seed.name set shared_genes true, tx set reduced overlapping features sequences db DE data. max.mismatch Number allowed mismatches total edit distance .indels True, include indels fixed Require sequence symbol matches searching. FALSE using wobbles.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_counts_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get match results as a column of counts appended to a differential expression results data.frame — .get_counts_column","text":"column match counts gene res","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_counts_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get match results as a column of counts appended to a differential expression results data.frame — .get_counts_column","text":"","code":"if (FALSE) { # interactive()  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  #Load test data res <- Schlegel_2022_Ttr_D1_30mkg  # Filter results for SeedMatchR res = filter_res(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  seed.seq = get_seed(guide.seq = guide.seq, seed.name = \"mer7m8\")  anno.db = load_annotations(\"rnor7\")  SeedMatchR:::.get_counts_column(res = res, target.seq = seed.seq$Target.Seq, seqs = anno.db$seqs, seed.name = \"mer7m8\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_custom_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a custom target sequence based on start and stop position — .get_custom_sequence","title":"Get a custom target sequence based on start and stop position — .get_custom_sequence","text":"function take guide sequence subset based custom start stop positions. sequence converted reverse-complement DNAString input RNAString sequence. start stop positions 1-based indexes.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_custom_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a custom target sequence based on start and stop position — .get_custom_sequence","text":"","code":".get_custom_sequence(guide.seq, start.pos, stop.pos, allow_wobbles = FALSE)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_custom_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a custom target sequence based on start and stop position — .get_custom_sequence","text":"guide.seq input RNA string character vector start.pos Start position index. 1-based index stop.pos Stop position index. allow_wobbles true, positions G:U wobble considered.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_custom_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a custom target sequence based on start and stop position — .get_custom_sequence","text":"DNAString customized search sequence","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_custom_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a custom target sequence based on start and stop position — .get_custom_sequence","text":"","code":"guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  custom.seq = SeedMatchR:::.get_custom_sequence(guide.seq, start.pos = 1, stop.pos = 23)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_longest_utr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the longest transcript per gene — .get_longest_utr","title":"Get the longest transcript per gene — .get_longest_utr","text":".get_longest_utr extract longest transcript per gene GenomicRanges::GRangesList using ensembldb::EnsDb object. GenomicFeatures::transcriptLengths() function used calculate 3' UTR lengths transcript ensembldb::EnsDb object.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_longest_utr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the longest transcript per gene — .get_longest_utr","text":"","code":".get_longest_utr(utr.grlist, txdb, filter = NULL)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_longest_utr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the longest transcript per gene — .get_longest_utr","text":"utr.grlist GenomicRanges::GRangesList UTR exons grouped tx_id txdb ensembldb::EnsDb object filter Optional AnnotationFilter::AnnotationFilterList object","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_longest_utr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the longest transcript per gene — .get_longest_utr","text":"GenomicRanges::GRangesList filtered containing longest 3' UTR per gene ensembldb::EnsDb object pass filters optional AnnotationFilter::AnnotationFilterList","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_longest_utr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the longest transcript per gene — .get_longest_utr","text":"","code":"if (FALSE) { # interactive() annodb <- SeedMatchR::load_species_anno_db(\"hg38\")  features = GenomicFeatures::threeUTRsByTranscript(annodb$txdb)  longest.tx = SeedMatchR:::.get_longest_tx(features, annodb$txdb) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_match_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sequence matches as a data.frame — .get_match_df","title":"Get sequence matches as a data.frame — .get_match_df","text":"function perform siRNA sequence match transcript library return data.frame ranges. function uses vmatchPattern perform matching. data.frame columns: \"names\", \"start\", \"end\", \"width\", \"seed\".  optional sirna.name argument provided additional column added.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_match_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sequence matches as a data.frame — .get_match_df","text":"","code":".get_match_df(   target.seq,   seqs,   seed.name,   sirna.name = NULL,   max.mismatch = 0,   with.indels = TRUE,   fixed = TRUE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_match_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sequence matches as a data.frame — .get_match_df","text":"target.seq Pattern search seqs seqs DNAStringSet search instances target.seq seed.name seed name reported data.frame column called seed sirna.name Optional siRNA name. new column called sirna.name added data.frame max.mismatch Number allowed mismatches total edit distance .indels True, include indels fixed Require sequence symbol matches searching. FALSE using wobbles.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_match_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sequence matches as a data.frame — .get_match_df","text":"data.frame matches ranges sequence seqs","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_match_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sequence matches as a data.frame — .get_match_df","text":"","code":"if (FALSE) { # interactive()  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  seed.seq = get_seed(guide.seq = guide.seq, seed.name = \"mer7m8\")  anno.db = load_annotations(\"rnor7\")  SeedMatchR:::.get_match_df(target.seq = seed.seq$Target.Seq, seqs = anno.db$seqs, seed.name = \"mer7m8\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_target_bulged_guides.html","id":null,"dir":"Reference","previous_headings":"","what":"get_target_bulged_guides — .get_target_bulged_guides","title":"get_target_bulged_guides — .get_target_bulged_guides","text":"function generates set RNA sequences bulges inserted various positions.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_target_bulged_guides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_target_bulged_guides — .get_target_bulged_guides","text":"","code":".get_target_bulged_guides(guide.seq, guide_seq_length, bulges_lim = bulges_lim)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_target_bulged_guides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_target_bulged_guides — .get_target_bulged_guides","text":"guide.seq character vector representing guide sequence. guide_seq_length Integer, length guide strand sequence bulges_lim integer representing maximum number bulges allowed.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_target_bulged_guides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_target_bulged_guides — .get_target_bulged_guides","text":"RNAStringSet object containing sequences bulges.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-get_target_bulged_guides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_target_bulged_guides — .get_target_bulged_guides","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-make_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of spaces for padding sequences for alignment — .make_space","title":"Create a vector of spaces for padding sequences for alignment — .make_space","text":"Create vector spaces padding sequences alignment","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-make_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of spaces for padding sequences for alignment — .make_space","text":"","code":".make_space(num.spaces)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-make_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of spaces for padding sequences for alignment — .make_space","text":"num.spaces Number spaces create vector.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-make_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of spaces for padding sequences for alignment — .make_space","text":"character vector spaces size num.spaces","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-matchStrings.html","id":null,"dir":"Reference","previous_headings":"","what":"Match two strings of the same size and return a character vector to represent positions that match — .matchStrings","title":"Match two strings of the same size and return a character vector to represent positions that match — .matchStrings","text":"Match two strings size return character vector represent positions match","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-matchStrings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match two strings of the same size and return a character vector to represent positions that match — .matchStrings","text":"","code":".matchStrings(s1, s2)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-matchStrings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match two strings of the same size and return a character vector to represent positions that match — .matchStrings","text":"s1 String 1 match s2 String 2 match","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-matchStrings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match two strings of the same size and return a character vector to represent positions that match — .matchStrings","text":"character vector | index every match strings.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-matchStrings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match two strings of the same size and return a character vector to represent positions that match — .matchStrings","text":"","code":"SeedMatchR:::.matchStrings(\"AAAACAGTGTTCTTGCTCTATAA\", \"ATAACAGTCTTCTTGCTCTGTAA\") #> [1] \"| |||||| |||||||||| |||\""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-plot_ecdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Use ggplot2 to plot the ecdf for log2 fold changes — .plot_ecdf","title":"Use ggplot2 to plot the ecdf for log2 fold changes — .plot_ecdf","text":"Use ggplot2 plot ecdf log2 fold changes","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-plot_ecdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use ggplot2 to plot the ecdf for log2 fold changes — .plot_ecdf","text":"","code":".plot_ecdf(   res,   palette = SeedMatchR.palette,   title,   legend_labels,   test_results,   theme = SeedMatchR.theme,   x_lims = c(-1, 1),   output_filename = NULL,   height = 5,   width = 5,   dpi = 300 )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-plot_ecdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use ggplot2 to plot the ecdf for log2 fold changes — .plot_ecdf","text":"res DE results data.frame. palette Palette use line colors. title Plot tile. legend_labels Labels legend entries. test_results Results ecdf_stat_test function. theme ggplot2 theme parameters. x_lims x-axis limits plotting. output_filename Optional output filename. height Height output image inches. width Width output image inches. dpi DPI output image.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-plot_ecdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use ggplot2 to plot the ecdf for log2 fold changes — .plot_ecdf","text":"ggplot log2(fold changes) ECDF.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-plot_ecdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use ggplot2 to plot the ecdf for log2 fold changes — .plot_ecdf","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-reduce_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce 3' UTRs to the gene level across all transcripts — .reduce_features","title":"Reduce 3' UTRs to the gene level across all transcripts — .reduce_features","text":"Reduce 3' UTRs gene level across transcripts","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-reduce_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce 3' UTRs to the gene level across all transcripts — .reduce_features","text":"","code":".reduce_features(gr.list, txdb, filter)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-reduce_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce 3' UTRs to the gene level across all transcripts — .reduce_features","text":"gr.list Input GenomicRanges::GRangesList file features grouped transcript txdb ensembldb::EnsDb object filter AnnotationFilter::AnnotationFilterList selecting transcripts","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-reduce_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce 3' UTRs to the gene level across all transcripts — .reduce_features","text":"gtf unique feature intervals per gene","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-reduce_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce 3' UTRs to the gene level across all transcripts — .reduce_features","text":"","code":"if (FALSE) { # interactive() anno.db = SeedMatchR::load_species_anno_db(\"hg38\")  features = SeedMatchR::get_features_gtf(anno.db$txdb)  gtf = SeedMatchR::.reduce_features(features, anno.db$txdb) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-sequence_with_tb.html","id":null,"dir":"Reference","previous_headings":"","what":".sequence_with_tb — .sequence_with_tb","title":".sequence_with_tb — .sequence_with_tb","text":"nested function generates sequence bulge inserted specified start position.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-sequence_with_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".sequence_with_tb — .sequence_with_tb","text":"","code":".sequence_with_tb(bulge_start, sequence, guide_seq_length)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-sequence_with_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".sequence_with_tb — .sequence_with_tb","text":"bulge_start integer representing start position bulge. sequence Input sequence guide_seq_length Integer, length guide strand sequence","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-sequence_with_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".sequence_with_tb — .sequence_with_tb","text":"character string representing sequence bulge.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-sequence_with_tb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".sequence_with_tb — .sequence_with_tb","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-update_sequence_at.html","id":null,"dir":"Reference","previous_headings":"","what":".update_sequence_at — .update_sequence_at","title":".update_sequence_at — .update_sequence_at","text":"Function update sequence library extracting subsequences around seed match.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-update_sequence_at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".update_sequence_at — .update_sequence_at","text":"","code":".update_sequence_at(   sequences,   seed,   mismatch_allowed = mismatch_,   limit_ = limit )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-update_sequence_at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".update_sequence_at — .update_sequence_at","text":"sequences DNAStringSet object containing sequences transcripts. seed character string representing seed sequence. mismatch_allowed integer representing maximum number mismatches allowed seed match. limit_ integer representing limit sequence update.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/dot-update_sequence_at.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".update_sequence_at — .update_sequence_at","text":"DNAStringSet object containing updated sequences data frame start sites seed matches.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and parse DESeq2 output from GSE184929 — download_parse_file","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"Download parse DESeq2 output GSE184929","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"","code":"download_parse_file(download.path, output.path)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"download.path File url downloaded output.path Filename used saving downloaded file","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"DESeq2 results data.frame.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/download_parse_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and parse DESeq2 output from GSE184929 — download_parse_file","text":"","code":"if (FALSE) { # interactive() download_parse_file() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for differences in log2(Fold Change) ECDFs between two gene lists — ecdf_stat_test","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists — ecdf_stat_test","text":"function uses stats DTS package test ECDF log2(Fold Changes) two groups based differential expression analysis. inputs function DE results data.frame two sets gene IDs called target_list background_list. functions look column called log2FoldChange data frame. user can choose 4 tests comparing ECDFs two gene sets. Options: KS, Wilcoxen, Wass, DTS. looking siRNA -target effects use alternative = \"greater\". looking effects miRNA targets, use alternative = \"lesser\". know direction change occur, use alternative = \"two.sided\".","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists — ecdf_stat_test","text":"","code":"ecdf_stat_test(   res,   target_list,   background_list,   stats_test = c(\"KS\", \"Wilcoxen\", \"Wass\", \"DTS\"),   alternative = c(\"greater\", \"two.sided\", \"less\") )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists — ecdf_stat_test","text":"res Input results file data frame. target_list Target set genes. background_list Set genes used background distribution. stats_test Stats test use. Options: KS, Wilcoxen, Wass, DTS. alternative null hypothesis test. Options: greater, less, two.sided.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists — ecdf_stat_test","text":"vector containing test statistic p-value.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/ecdf_stat_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for differences in log2(Fold Change) ECDFs between two gene lists — ecdf_stat_test","text":"","code":"if (FALSE) { # interactive() library(dplyr)  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_annotations(\"rnor7\")  # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_res(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res = res, gtf = anno.db$gtf, seqs = anno.db$seqs, sequence = guide.seq, seed.name = \"mer7m8\", tx.id.col= FALSE)  # Gene set 1 mer7m8.list = res$gene_id[res$mer7m8 >= 1]  # Gene set 2 background.list = res$gene_id[!(res$mer7m8 %in% mer7m8.list)]  ecdf.res = SeedMatchR::ecdf_stat_test(res, mer7m8.list, background.list) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter differential expression results — filter_res","title":"Filter differential expression results — filter_res","text":"Filter differential expression results use search counting functions. filtering criteria : Filter genes expressed counted : baseMean == NA | pvalue == NA | log2FoldChange == NA Filter genes extreme outliers: pvalue = NA padj = NA Filter genes excluded independent filtering. padj = NA Filter results fdr_cutoff Filter results log2FoldChange Filter results baseMean","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter differential expression results — filter_res","text":"","code":"filter_res(res, fdr_cutoff = 1, fc_cutoff = 0, basemean_cutoff = 30)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter differential expression results — filter_res","text":"res differential expression results data frame fdr_cutoff false discovery rate cutoff use. fc_cutoff fold change cutoff use. absolute value used cutoff values greater---equal-kept. basemean_cutoff minimum baseMean expression cutoff","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter differential expression results — filter_res","text":"filtered results data frame","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/filter_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter differential expression results — filter_res","text":"","code":"if (FALSE) { # interactive() # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter differential expression results for SeedMatchR res = filter_res(res, fdr_cutoff=1, fc_cutoff=0) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search","text":"function use Biostrings::vcountpattern find matches input siRNA sequence. function provide matrix sequences x match type. best match reported based pre-defined list rankings.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search","text":"","code":"full_search(   guide.seq,   seqs,   group.name = \"siRNA\",   indel.bool = FALSE,   allow_wobbles = FALSE,   seqs.to.search = c(\"Full\", \"18mer\", \"15mer\", \"mer8\", \"mer7m8\", \"mer7A1\", \"mer6\"),   res_format = c(\"counts\", \"iranges\"),   fixed = FALSE,   nonseed.edit.distances = c(0:4),   seed.edit.distances = c(0:1) )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search","text":"guide.seq Input guide sequence. seqs Biostrings::DNAStringSet sequences search. group.name Group name use labeling. indel.bool Boolean long format (TRUE, FALSE) whether include indels. allow_wobbles true, positions G:U wobble considered. seqs..search List sequences search. Options: \"Full\", \"18mer\", \"15mer\", \"mer8\", \"mer7m8\", \"mer7A1\", \"mer6\". res_format Either \"iranges\" \"counts\". fixed Whether use matching string symbols search ambiguous. nonseed.edit.distances integer value indicating allowed edit distance non-seed searches. seed.edit.distances integer value indicating allowed edit distance seed searches.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search","text":"data.frame sequence match counts.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search","text":"","code":"if (FALSE) { # interactive() print(\"TBD\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search_ranges","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search_ranges","text":"function use Biostrings::vcountpattern find matches input siRNA sequence. function provide matrix sequences x match type. best match reported based pre-defined list rankings.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search_ranges","text":"","code":"full_search_ranges(   guide.seq,   seqs,   group.name = \"siRNA\",   indel.bool.opt = c(TRUE, FALSE),   edit.dist.list = c(0:4),   seqs.to.search = c(\"Full\", \"18mer\", \"15mer\", \"mer8\", \"mer7m8\", \"mer7A1\", \"mer6\"),   fixed.opt = FALSE,   max.seed.edit.dist = 1 )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search_ranges","text":"guide.seq Input guide sequence seqs Biostrings::DNAStringSet sequences search group.name Group name use labeling indel.bool.opt Vector indel options. edit.dist.list vector possible edit distances. seqs..search List sequences search. Options: \"Full\", \"18mer\", \"mer8\", \"mer7m8\", \"mer7A1\", \"mer6\" fixed.opt vector possible fixed paramters. max.seed.edit.dist integer value indicating allowed edit distance seed searches.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search_ranges","text":"data.frame sequence match counts","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/full_search_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search input Biostrings::DNAStringSet for a set of defined sequences — full_search_ranges","text":"","code":"if (FALSE) { # interactive() print(\"TBD\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/generate_e_value.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_e_value — generate_e_value","title":"generate_e_value — generate_e_value","text":"function calculates e-value gene result_output dataframe. e-value calculated number times random siRNA sequences higher number matches actual siRNA sequences.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/generate_e_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_e_value — generate_e_value","text":"","code":"generate_e_value(   result_output,   random_seq_results = random_siRNA_results_overall )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/generate_e_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_e_value — generate_e_value","text":"result_output dataframe siRNA sequences respective number matches random_seq_results dataframe random siRNA sequences respective number matches","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/generate_e_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate_e_value — generate_e_value","text":"dataframe e-value gene","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_3UTR_granges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract GenomicRanges::GRangesList of 3' UTRs — get_3UTR_granges","title":"Extract GenomicRanges::GRangesList of 3' UTRs — get_3UTR_granges","text":"get_3UTR_granges leverages GenomicFeatures::threeUTRsByTranscript() function extract 3' UTR regions given ensembldb::EnsDb object.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_3UTR_granges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract GenomicRanges::GRangesList of 3' UTRs — get_3UTR_granges","text":"","code":"get_3UTR_granges(   txdb,   filter = NULL,   longest.utr = FALSE,   reduce.features = FALSE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_3UTR_granges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract GenomicRanges::GRangesList of 3' UTRs — get_3UTR_granges","text":"txdb ensembldb::EnsDb object filter AnnotationFilter::AnnotationFilterList selecting transcripts longest.utr Reduce annotations longest UTR per gene reduce.features Reduce 3' UTRs non-overlapping intervals across transcripts per gene.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_3UTR_granges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract GenomicRanges::GRangesList of 3' UTRs — get_3UTR_granges","text":"GenomicRanges::GRangesList object representing genomic features interest. Results returned grouped transcript, unless longest.utr TRUE, results grouped gene.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_3UTR_granges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract GenomicRanges::GRangesList of 3' UTRs — get_3UTR_granges","text":"","code":"if (FALSE) { # interactive() annodb <- SeedMatchR::load_species_anno_db(\"hg38\")  features <- SeedMatchR::get_3UTR_granges(annodb$txdb) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_compensatory_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"get_compensatory_sequences — get_compensatory_sequences","title":"get_compensatory_sequences — get_compensatory_sequences","text":"Function get 3' compensatory sequences given siRNA sequence.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_compensatory_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_compensatory_sequences — get_compensatory_sequences","text":"","code":"get_compensatory_sequences(   guide.seq,   seed,   sequences,   compensatory_region_length_min = 6,   compensatory_region_length_max = NA,   limit = 100,   mismatch_ = 1,   mismatch_compensatory_region_ = 0 )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_compensatory_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_compensatory_sequences — get_compensatory_sequences","text":"guide.seq character string representing guide sequence. seed character string representing seed sequence. sequences DNAStringSet object containing sequences transcripts. compensatory_region_length_min integer representing minimum length compensatory region. compensatory_region_length_max integer representing maximum length compensatory region. limit integer representing limit sequence update. mismatch_ integer representing maximum number mismatches allowed seed match. mismatch_compensatory_region_ integer representing maximum number mismatches allowed compensatory region.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_compensatory_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_compensatory_sequences — get_compensatory_sequences","text":"data frame containing compensatory regions.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_compensatory_sequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_compensatory_sequences — get_compensatory_sequences","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example DESeq2 data from GEO — get_example_data","title":"Download example DESeq2 data from GEO — get_example_data","text":"function download data can used  SeedMatchR. Choosing 'sirna' download 3 DESeq2 results files GSE184929. Choosing 'mirna' download miRDB database tsv.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example DESeq2 data from GEO — get_example_data","text":"","code":"get_example_data(example.type = c(\"sirna\", \"mirna\"))"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download example DESeq2 data from GEO — get_example_data","text":"example.type Name example load. Options: sirna, mirna","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download example DESeq2 data from GEO — get_example_data","text":"None?","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download example DESeq2 data from GEO — get_example_data","text":"","code":"if (FALSE) { # interactive() get_example_data() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_network_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"get_network_matches — get_network_matches","title":"get_network_matches — get_network_matches","text":"function calculates network matches given graph gene list using transcription network aggregation method.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_network_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_network_matches — get_network_matches","text":"","code":"get_network_matches(   ENSG_Genelist,   organism,   aggregator = \"mean\",   network_data = NULL )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_network_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_network_matches — get_network_matches","text":"ENSG_Genelist character vector gene identifiers. organism character string specifying organism. Options 'human' 'mouse'. Default 'human'. aggregator character string specifying aggregation method. Options 'mean' 'degree_importance'. Default 'mean'. network_data data frame containing transcription network data. NULL, function download data predefined URL.columns data frame 'source', 'target', 'edge_type', 'evidence'.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_network_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_network_matches — get_network_matches","text":"data frame columns 'ENSG', 'repression_matches', 'activation_matches' containing vertex names respective feature values.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the target sequence for a given siRNA input sequence — get_seed","title":"Get the target sequence for a given siRNA input sequence — get_seed","text":"Given sequence greater 8 bp oriented 5' -> 3' seed definition (custom definition), function return object containing target sequence information. Built-options: mer8,  mer7A1, mer7m8, mer6, Full, 18mer Custom Definitions: Users can input custom seed name, must provide start position (start.pos) stop position (stop.pos) define range seed sequence. Note: mer8 mer7A1 force U position g1. results target sequence searched. based historical data observations miRNA biology. wish enforce , provide start, stop, custom name use original sequence.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the target sequence for a given siRNA input sequence — get_seed","text":"","code":"get_seed(   guide.seq,   seed.name = \"mer7m8\",   start.pos = NULL,   stop.pos = NULL,   allow_wobbles = FALSE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the target sequence for a given siRNA input sequence — get_seed","text":"guide.seq character string greater 8 bp oriented 5'-> 3'. seed.name seed name interest. Options: mer8,  mer7A1, mer7m8, mer6, 18-mer,  15-mer, Full. default list, start.pos stop.pos arguments used define seed. start.pos start position custom seed definition. 1-based stop.pos stop position custom seed definition. allow_wobbles True, allow G:U wobbles replacing U Y.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the target sequence for a given siRNA input sequence — get_seed","text":"object entries: Guide: Input guide sequence. Input expected RNA. Seed.Name: seed name. Seed.Seq.RNA: seed sequence RNAString Seed.Seq.DNA: seed sequence DNAString Target.Seq: target DNA sequence based reverse complement Seed.Seq.DNA","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the target sequence for a given siRNA input sequence — get_seed","text":"","code":"# Example Ttr from Schlegel et al. 2022 guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  # Get seed match seed.seq = get_seed(guide.seq = guide.seq, seed.name = \"mer7m8\")"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_stringPPI_to_stringGGI.html","id":null,"dir":"Reference","previous_headings":"","what":"get_stringPPI_to_stringGGI — get_stringPPI_to_stringGGI","title":"get_stringPPI_to_stringGGI — get_stringPPI_to_stringGGI","text":"function retrieves protein-protein interaction network STRINGdb maps protein ids gene ids using Biomart.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_stringPPI_to_stringGGI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_stringPPI_to_stringGGI — get_stringPPI_to_stringGGI","text":"","code":"get_stringPPI_to_stringGGI(sp_number, p = 0.95, sp = \"rat\")"},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_stringPPI_to_stringGGI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_stringPPI_to_stringGGI — get_stringPPI_to_stringGGI","text":"sp_number species number STRINGdb object p percentile threshold STRINGdb network sp species Biomart object","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_stringPPI_to_stringGGI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_stringPPI_to_stringGGI — get_stringPPI_to_stringGGI","text":"protein-protein interaction network gene ids","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/get_stringPPI_to_stringGGI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_stringPPI_to_stringGGI — get_stringPPI_to_stringGGI","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/kmer_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a histogram of kmer frequency across genes — kmer_hist","title":"Plot a histogram of kmer frequency across genes — kmer_hist","text":"Plot histogram kmer frequency across genes","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/kmer_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a histogram of kmer frequency across genes — kmer_hist","text":"","code":"kmer_hist(   seqs,   target.seq,   width = 7,   step = 1,   title = \"K-mer gene frequencies\" )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/kmer_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a histogram of kmer frequency across genes — kmer_hist","text":"seqs Input Biostrings::DNAStringSet target.seq Character vector target seed sequence. Must size width parameter. width Width kmer count. step Step size kmer window along sequence. title Figure title","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/kmer_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a histogram of kmer frequency across genes — kmer_hist","text":"list : *$plot: histogram frequencies X number genes kmer *$matrix: Counts matrix","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/kmer_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a histogram of kmer frequency across genes — kmer_hist","text":"","code":"if (FALSE) { # interactive() annodb = load_annotations(\"hg38\", canonical = T)  kmer_hist(annodb$seqs, \"AAAAAAA\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","title":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","text":"load_annotations uses AnnotationHub::AnnotationHub() load species-specific annotations. function currently works human, rat, mouse.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","text":"","code":"load_annotations(   reference.name = c(\"hg38\", \"hg38-old\", \"mm39\", \"mm10\", \"rnor6\", \"rnor7\"),   feature.type = c(\"3UTR\", \"5UTR\", \"exons\", \"cds\"),   standard.chroms = TRUE,   remove.na.rows = TRUE,   protein.coding = TRUE,   transcript.support = NULL,   canonical = TRUE,   gene_id = NULL,   tx_id = NULL,   symbol = NULL,   entrez_id = NULL,   longest.utr = FALSE,   reduce.features = FALSE,   add.filter = NULL,   min.feature.width = 8,   return_gene_name = TRUE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","text":"reference.name Reference build name. Options: hg38, rnor6, rnor7, mm39, mm10 feature.type transcript feature type extract. Options: \"3UTR\", \"5UTR\", \"exons\", \"cds\" standard.chroms Keep standard chromosomes. Boolean. remove.na.rows Remove transcripts NA ID column. Boolean. protein.coding Keep protein coding genes. Boolean. transcript.support Filter transcript support level. Integer 1-4 canonical Keep ENSEMBL canonical transcript. Boolean. gene_id Keep specific ENSEMBL ID(s). Input vector tx_id Keep specific tx_id(s). Input vector symbol Keep specific gene symbol(s). Input vector entrez_id Keep specific ENTREZ ID(s). Input vector longest.utr Reduce annotations longest UTR per gene reduce.features Reduce 3' UTRs non-overlapping intervals across transcripts per gene. add.filter Optional AnnotationFilter::AnnotationFilterList include min.feature.width minimum length features nucleotides. return_gene_name true, gene_id used name sequences.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","text":"following returned object: $gtf: GenomicRanges::GRanges object containing transcript information $txdb: ensembldb::EnsDb object transcript information $dna: rtracklayer::TwoBitFile DNA sequence $features: GenomicRanges::GRangesList object representing features interest $seqs: Biostrings::DNAStringSet features $features $filter: AnnotationFilter::AnnotationFilterList used filtering ensembldb::EnsDb object $tx.names: list transcript names $seqs","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_annotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","text":"function designed perform annotation loading, parsing, sequence extractions reference interest. load_annotations uses ensembldb package handling annotations. allows use AnnotationFilter::AnnotationFilters easily selecting transcripts interest. arguments load_annotations geared towards customizing output features sequence extracted ensembldb::EnsDb object. Filtering parameters inherited build_annotation_filter()`.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load species-specific annotations needed to run SeedMatchR() — load_annotations","text":"","code":"if (FALSE) { # interactive() anno.db = load_annotations(\"hg38\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load example DESeq2 data into the environment — load_example_data","title":"Load example DESeq2 data into the environment — load_example_data","text":"Load example DESeq2 data environment","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load example DESeq2 data into the environment — load_example_data","text":"","code":"load_example_data(example.type = c(\"sirna\", \"mirna\"))"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load example DESeq2 data into the environment — load_example_data","text":"example.type Name example load. Options: sirna, mirna","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load example DESeq2 data into the environment — load_example_data","text":"Loads either Schlegel 2022 RNAseq data miRDB environment.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load example DESeq2 data into the environment — load_example_data","text":"","code":"if (FALSE) { # interactive() load_example_data() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Load species-specific annotations from AnnotationHub — load_species_anno_db","title":"Load species-specific annotations from AnnotationHub — load_species_anno_db","text":"Use AnnotationHub::AnnotationHub() load species-specific rtracklayer::TwoBitFile DNA sequence ensembldb::EnsDb object. function currently works human, rat, mouse. specific versions builds used reference defined articles(SeedMatchR_Annotation_Databases).","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load species-specific annotations from AnnotationHub — load_species_anno_db","text":"","code":"load_species_anno_db(   reference.name = c(\"hg38\", \"hg38-old\", \"mm39\", \"mm10\", \"rnor6\", \"rnor7\", \"rnor7.113\"),   filter = NULL )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load species-specific annotations from AnnotationHub — load_species_anno_db","text":"reference.name Reference build name. Options: hg38, rnor6, rnor7, mm39, mm10 filter AnnotationFilter::AnnotationFilterList used refine annotations.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load species-specific annotations from AnnotationHub — load_species_anno_db","text":"function return: $gtf: GenomicRanges::GRanges object containing GTF information $dna: rtracklayer::TwoBitFile reference DNA sequence $txdb: ensembldb::EnsDb object transcriptome information","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/load_species_anno_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load species-specific annotations from AnnotationHub — load_species_anno_db","text":"","code":"if (FALSE) { # interactive() anno.db = SeedMatchR::load_species_anno_db(\"hg38\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/match_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Find inter match distances for each gene — match_distances","title":"Find inter match distances for each gene — match_distances","text":"Find inter match distances gene","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/match_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find inter match distances for each gene — match_distances","text":"","code":"match_distances(   gr_list,   feature.pos = c(\"fivePrimeEnd\", \"threePrimeEnd\", \"center\") )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/match_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find inter match distances for each gene — match_distances","text":"gr_list GRangesList matches SeedMatchR feature.pos position use central point. Options: \"fivePrimeEnd\", \"threePrimeEnd\", \"center\"","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/match_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find inter match distances for each gene — match_distances","text":"list calculated distances match GRanges object grouped gene name.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/match_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find inter match distances for each gene — match_distances","text":"","code":"if (FALSE) { # interactive() match_distances(gr) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/message_passing.html","id":null,"dir":"Reference","previous_headings":"","what":"message_passing — message_passing","title":"message_passing — message_passing","text":"function performs message passing graph based transcription network aggregation method.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/message_passing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"message_passing — message_passing","text":"","code":"message_passing(graph, transcription_network, agg = \"mean\")"},{"path":"https://tacazares.github.io/SeedMatchR/reference/message_passing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"message_passing — message_passing","text":"graph igraph object representing graph. transcription_network data frame containing transcription network columns 'target' 'edge_type'. agg character string specifying aggregation method. Options 'mean' 'degree_importance'. Default 'mean'.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/message_passing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"message_passing — message_passing","text":"updated graph new vertex attributes 'feature_rep' 'features_act'.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/plotAlignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot matches as alignments against target sequence feature — plotAlignment","title":"Plot matches as alignments against target sequence feature — plotAlignment","text":"Plot matches alignments target sequence feature","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/plotAlignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot matches as alignments against target sequence feature — plotAlignment","text":"","code":"plotAlignment(   match.info,   guide.seq,   seqs,   aln.name = \"alignment\",   left.pad = 0,   right.pad = 0,   seq.start.pos = 2,   seq.stop.pos = 8,   output.type = c(\"data.frame\", \"ggplot\") )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/plotAlignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot matches as alignments against target sequence feature — plotAlignment","text":"match.info row data.frame matches produced SeedMatchR guide.seq full siRNA guide sequence seqs feature sequences used scanning aln.name column name data.frame reporting alignments left.pad number nucleotides left show feature sequence beyond length guide sequence. right.pad number nucleotides right show feature sequence beyond length guide sequence. seq.start.pos seed definition start position seq.stop.pos seed definition stop position output.type Either data.frame ggplot","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/plotAlignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot matches as alignments against target sequence feature — plotAlignment","text":"data.frame representing input sequences alignment .","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/run_wobble_bulges_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Running wobble and bulge inclusive seedmatchR pipeline — run_wobble_bulges_pipeline","title":"Running wobble and bulge inclusive seedmatchR pipeline — run_wobble_bulges_pipeline","text":"function runs wobble bulge inclusive SeedMatchR pipeline.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/run_wobble_bulges_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running wobble and bulge inclusive seedmatchR pipeline — run_wobble_bulges_pipeline","text":"","code":"run_wobble_bulges_pipeline(   guide.seq,   res = res,   features = features,   bulges_lim = 4,   nt = 3,   silent = FALSE )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/run_wobble_bulges_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running wobble and bulge inclusive seedmatchR pipeline — run_wobble_bulges_pipeline","text":"guide.seq character string representing guide sequence. res DESeq2 results data.frame. features DNAStringSet object sequence information features. names sequences transcript names. bulges_lim integer representing number target bulges allowed per sequence. Default 4. nt integer representing length start siRNA wobbles allowed. Default 3. silent logical value determine function print progress. Default FALSE.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/run_wobble_bulges_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Running wobble and bulge inclusive seedmatchR pipeline — run_wobble_bulges_pipeline","text":"data.frame overall matches seed.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/run_wobble_bulges_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Running wobble and bulge inclusive seedmatchR pipeline — run_wobble_bulges_pipeline","text":"","code":"if (FALSE) { # interactive() result_df = run_wobble_bulges_pipeline(guide.seq = guide.seq, res = res, features = features) }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/sequence_kmer_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the k-mer frequency in a set of sequences — sequence_kmer_counts","title":"Count the k-mer frequency in a set of sequences — sequence_kmer_counts","text":"Count k-mer frequency set sequences","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/sequence_kmer_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the k-mer frequency in a set of sequences — sequence_kmer_counts","text":"","code":"sequence_kmer_counts(   seqs,   tx2gene,   out.path = NULL,   path.basename = NULL,   width = 7,   step = 1,   simplify.as = \"matrix\" )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/sequence_kmer_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the k-mer frequency in a set of sequences — sequence_kmer_counts","text":"seqs Input Biostrings::DNAStringSet tx2gene Data frame mapping tx > gene columsn tx_id + gene_id .path Output directory path path.basename Output basename width K-mer size step step size simplify.output type either matrix list","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/sequence_kmer_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the k-mer frequency in a set of sequences — sequence_kmer_counts","text":"oligonucleotide frequencies","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/sequence_kmer_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the k-mer frequency in a set of sequences — sequence_kmer_counts","text":"","code":"if (FALSE) { # interactive() }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/vmatchPattern2.html","id":null,"dir":"Reference","previous_headings":"","what":"A modified vmatchPattern function that supports indels and mismatches — vmatchPattern2","title":"A modified vmatchPattern function that supports indels and mismatches — vmatchPattern2","text":"modified vmatchPattern function supports indels mismatches","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/vmatchPattern2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A modified vmatchPattern function that supports indels and mismatches — vmatchPattern2","text":"","code":"vmatchPattern2(   pattern,   subject,   max.mismatch = 0,   min.mismatch = 0,   with.indels = FALSE,   fixed = TRUE,   algorithm = \"auto\" )"},{"path":"https://tacazares.github.io/SeedMatchR/reference/vmatchPattern2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A modified vmatchPattern function that supports indels and mismatches — vmatchPattern2","text":"pattern String search subject DNAStringSet query max.mismatch Maximum number mismatches allowed min.mismatch Minimum number mismatches allowed .indels Boolean whether include indels fixed Boolean whether match character symbols algorithm search algorithm use. Defaults \"auto\"","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/vmatchPattern2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A modified vmatchPattern function that supports indels and mismatches — vmatchPattern2","text":"data frame interval ranges per sequence","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/vmatchPattern2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A modified vmatchPattern function that supports indels and mismatches — vmatchPattern2","text":"","code":"if (FALSE) { # interactive() print(\"TBD\") }"},{"path":"https://tacazares.github.io/SeedMatchR/reference/wass_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute overall, positive, and negative Wasserstein differences between ECDFs — wass_dist","title":"Function to compute overall, positive, and negative Wasserstein differences between ECDFs — wass_dist","text":"Function compute overall, positive, negative Wasserstein differences ECDFs","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/wass_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute overall, positive, and negative Wasserstein differences between ECDFs — wass_dist","text":"","code":"wass_dist(seed, non.seed, n.interp = 10000)"},{"path":"https://tacazares.github.io/SeedMatchR/reference/wass_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute overall, positive, and negative Wasserstein differences between ECDFs — wass_dist","text":"seed vector log2 FC values pre-specified seed matching genes. non.seed vector log2FC values pre-specified non-seed matching genes. n.interp number interpolation points (0,1) integrating eCDF difference.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/wass_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute overall, positive, and negative Wasserstein differences between ECDFs — wass_dist","text":"list containing: list(abs.auc      = Absolute Wasserstein statistic, neg.cens.auc = Negative Wasserstein statistic, pos.cens.auc = Positive Wasserstein statistic, dens.plot    = Density plot, cdf.plot     = CDF plot, diff.plot    = Difference plot)","code":""},{"path":"https://tacazares.github.io/SeedMatchR/reference/wass_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to compute overall, positive, and negative Wasserstein differences between ECDFs — wass_dist","text":"","code":"if (FALSE) { # interactive() library(dplyr)  guide.seq = \"UUAUAGAGCAAGAACACUGUUUU\"  anno.db = load_annotations(\"rnor7\")  # Load test data get_example_data(\"sirna\")  sirna.data = load_example_data(\"sirna\")  res <- sirna.data$Schlegel_2022_Ttr_D1_30mkg  # Filter DESeq2 results for SeedMatchR res = filter_res(res, fdr.cutoff=1, fc.cutoff=0, rm.na.log2fc = TRUE)  res = SeedMatchR(res = res, gtf = anno.db$gtf, seqs = anno.db$seqs, sequence = guide.seq, seed.name = \"mer7m8\", tx.id.col= FALSE)  # Gene set 1 mer7m8.list = res$log2FoldChange[res$mer7m8 >= 1]  # Gene set 2 background.list = res$log2FoldChange[!(res$mer7m8 %in% mer7m8.list)]  ecdf.res = SeedMatchR::wass_dist(res, mer7m8.list, background.list) }"},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-200","dir":"Changelog","previous_headings":"","what":"SeedMatchR 2.0.0","title":"SeedMatchR 2.0.0","text":"Requires R >= 4.3.2 Remove requirement GTF file. mainly used map aggregate counts across features, updated tx objects. report single transcript per gene. user can use code summarize counts across multiple transcript per gene need . names sequences names gene_id column must match error. argument universal_set changed shared_genes avoid confusion. argument result intersection featuers sequence database results data frame reported. Added articles describing generate k-mer counts sequence library, specifics mismatches/indels search. P-values reported according standards mentioned publication. Test statistics rounded 3 digits plotted. Use ensembldb objects AnnotationHub instead making GTF file. much better coverage meta data ensembldb objects available filtering. also resulted GTF file generated load_species_anno_db extracted txdb object . Added function build_annotation_filter help create AnnotationFilterList objects selecting transcripts ensembldb objects. Updated documentation examples generating annotations. Added slot filter output list results load_annotations. Added functions searching wobbles bulges. Updated statistics functions include DTS package custom Wasserstein statistic. Added option return data.frame matches column added DESEQ2 input file. Added SeedMatchLogo function plotting logos around seed matches. Reworked function load_annotations. function now takes input reference.name corresponds either hg38, mm10, mm9, rnor6, rnor7. Added argument fixed search functions enable searching ambiguous nucleotides. can now specify custom seed definitions using start.pos stop.pos arguments SeedMatchR get_seed functions. function load_annotations now replaces load_species_anno_db. function now returns object dna, gtf, seqs, features slots. function additional flags reducing ranges filtering protein coding genes. Example data saved temp directory.","code":""},{"path":"https://tacazares.github.io/SeedMatchR/news/index.html","id":"seedmatchr-100","dir":"Changelog","previous_headings":"","what":"SeedMatchR 1.0.0","title":"SeedMatchR 1.0.0","text":"First release prepared CRAN submission","code":""}]
